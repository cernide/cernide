namespace: "polyaxon"
deploymentType: "kubernetes"
limitResources: false

rbac:
  enabled: true

ingress:
  enabled: false
  hostName:
  path:
  # Ingress TLS configuration
  # Secrets must be manually created in the namespace
  tls: []
  # - secretName: polyaxon.cluster.local-tls
  #   hosts:
  #     - polyaxon.cluster.local

  # Default annotation, some of these values allow uploading large files to the API
  # if you are using a different ingress other than nginx, you need to adapt the annotations.
  annotations:

  #  ingress.kubernetes.io/ssl-redirect: "false"
  #  ingress.kubernetes.io/rewrite-target: /
  #  ingress.kubernetes.io/add-base-url: "true"
  #  ingress.kubernetes.io/proxy-connect-timeout: "600"
  #  ingress.kubernetes.io/proxy-read-timeout: "600"
  #  ingress.kubernetes.io/proxy-send-timeout: "600"
  #  ingress.kubernetes.io/send-timeout: "600"
  #  ingress.kubernetes.io/proxy-body-size: 4G

  # kubernetes.io/tls-acme: 'true'

# To set ssl and serve https with Polyaxon deployed with NodePort service
ssl: {}

dns: {}

auth:
  enabled: true
  external:
  useResolver: true

# If you enable ingress, please set the gateway service type value to:
#    * ClusterIP or NodePort (on GKE you cannot use ClusterIP)
# Otherwise you should set it to LoadBalancer (default)
gateway:
  image: polyaxon/polyaxon-gateway
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

  service:
    name: gateway
    type: LoadBalancer
    port: 80
    targetPort: 80
    nodePort: 31833
    annotations: {}


api:
  enabled: true
  image: polyaxon/polyaxon-api
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

  service:
    name: api
    type: ClusterIP
    port: 80
    targetPort: 80
    nodePort: 31811
    annotations: {}

streams:
  image: polyaxon/polyaxon-streams
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

  service:
    name: streams
    type: ClusterIP
    port: 80
    targetPort: 80
    nodePort: 31822
    annotations: {}

init:
  image: polyaxon/polyaxon-init
  imageTag: 1.0.5
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

sidecar:
  image: polyaxon/polyaxon-sidecar
  imageTag: 1.0.5
  imagePullPolicy: Always
  sleepInterval: 10
  syncInterval: 10
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

agent:
  token:
  instance:
  enabled: false
  image: polyaxon/polyaxon-agent
  imageTag: 1.0.5
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 1000m
      memory: 2000Mi
    requests:
      cpu: 128m
      memory: 300Mi

operator:
  enabled: false
  image: polyaxon/polyaxon-agent
  imageTag: 1.0.5
  imagePullPolicy: Always
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 20Mi

scheduler:
  enabled: false
  image: polyaxon/polyaxon-scheduler
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  concurrency: 2
  resources:
    limits:
      cpu: 350m
      memory: 350Mi
    requests:
      cpu: 150m
      memory: 200Mi
  celery: {}

worker:
  enabled: false
  image: polyaxon/worker
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  concurrency: 2
  resources:
    limits:
      cpu: 200m
      memory: 300Mi
    requests:
      cpu: 130m
      memory: 200Mi
  celery: {workerPrefetchMultiplier: 10}

beat:
  enabled: false
  image: polyaxon/polyaxon-beat
  imageTag: 1.0.5
  imagePullPolicy: Always
  replicas: 1
  resources:
    limits:
      cpu: 50m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi

hooks:
  image: polyaxon/polyaxon-manage
  imageTag: 1.0.5
  imagePullPolicy: Always

tablesHook:
  image: polyaxon/polyaxon-tables
  imageTag: 0.4.4
  imagePullPolicy: Always


externalServices:
  postgresql:
    user:
    password:
    database:
    host:
    port:
    connMaxAge: 60

  redis:
    usePassword:
    password:
    host:
    port:

  rabbitmq:
    user:
    password:
    host:
    port:

  api:
    host:
    port:

broker:

postgresql:
  # Whether to deploy a postgres server in-cluster.
  # To use an external postgres instance:
  #  * set enabled to False, to disable the in-cluster deployment
  #  * configure external postgresql required attributes in services.postgresql
  enabled: true
  connMaxAge: 60
  postgresqlUsername: polyaxon
  postgresqlPassword: polyaxon
  postgresqlDatabase: polyaxon
  persistence:
    enabled: false
    size: 2Gi
  master:
    affinity:
      podAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - "polyaxon-core"
            topologyKey: "kubernetes.io/hostname"

redis:
  # Whether to deploy a redis server in-cluster.
  # To use an external redis instance:
  #  * set enabled to False, to disable the in-cluster deployment
  #  * configure external redis required attributes in services.redis
  enabled: true
  usePassword: false
  password:
  image:
#    repository: redis
    tag: 5.0.4
#  password: polyaxon
  port: 6379
  master:
    persistence:
      enabled: true
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - "polyaxon-core"
            topologyKey: "kubernetes.io/hostname"

rabbitmq-ha:
  # Whether to deploy a rabbitmq server in-cluster.
  # To use an external rabbitmq instance:
  #  * set enabled to False, to disable the in-cluster deployment
  #  * configure external rabbitmq required attributes in services.rabbitmq
  enabled: true
  replicaCount: 1
  rabbitmqUsername: polyaxon
  rabbitmqPassword: polyaxon
  resources:
    requests:
      memory: 256Mi
      cpu: 300m
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - "polyaxon-core"
            topologyKey: "kubernetes.io/hostname"

docker-registry:
  # Whether to deploy a docker registry server in-cluster.
  # To use an external docker registry instance:
  #  * set enabled to False, to disable the in-cluster deployment
  #  * use the web UI to configure the external host
  enabled: true
  service:
    type: NodePort
    nodePort: 31813
  resources:
    requests:
      cpu: 300m
      memory: 312Mi
  persistence:
    enabled: false
  affinity:
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - "polyaxon-core"
            topologyKey: "kubernetes.io/hostname"


artifactsStore:
connections:
notificationConnections:

imagePullSecrets: []

# Initial admin user to create
user:
  username: "root"
  email: "root@polyaxon.local"
  password: "rootpassword"

# Time zone
timezone: 'UTC'
adminViewEnabled: true
encryptionSecret:

# Include helm chart release revision
includeChartRevision: true

# N.B. this is in beta
securityContext:
  enabled: false
  user: 2222
  group: 2222

ldap:
  enabled: false
  serverUri:
  globalOptions: {}
  connectionOptions: {}
  bindDN:
  bindPassword:
  userSearchBaseDN:
  userSearchFilterStr:
  userDNTemplate:
  startTLS: false
  userAttrMap: {}
  groupSearchBaseDN:
  groupSearchGroupType:
  requireGroup:
  denyGroup:

nodeSelector: {}
tolerations: []
affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: type
              operator: In
              values:
              - "polyaxon-core"
          topologyKey: "kubernetes.io/hostname"

passwordLength: 8

types:
  core: "polyaxon-core"
  runner: "polyaxon-runner"
  config: "polyaxon-config"

roles:
  api: "polyaxon-api"
  log: "polyaxon-logs"
  config: "polyaxon-config"
  hooks: "polyaxon-hooks"
  worker: "polyaxon-workers"
  dashboard: "polyaxon-dashboard"

email:
  host: smtp
  port: 25
  useTls: false
  hostUser: ""
  hostPassword: ""

# To receive email/notification with correct host
# hostName: 159.203.150.212 or polyaxon.foo.com

# White list of ip/hosts that can communicate with the api
#allowedHosts:
#  - 127.0.0.1
#  - 159.203.150.212

intervals:  # in seconds
  runsScheduler: 15
  operationsDefaultRetryDelay: 60
  operationsMaxRetryDelay: 3600

services:
  port: 80
