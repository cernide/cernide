// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package hub_models_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdateHubModelReader is a Reader for the UpdateHubModel structure.
type UpdateHubModelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateHubModelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateHubModelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateHubModelNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateHubModelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateHubModelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateHubModelDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateHubModelOK creates a UpdateHubModelOK with default headers values
func NewUpdateHubModelOK() *UpdateHubModelOK {
	return &UpdateHubModelOK{}
}

/*UpdateHubModelOK handles this case with default header values.

A successful response.
*/
type UpdateHubModelOK struct {
	Payload *service_model.V1HubModel
}

func (o *UpdateHubModelOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/models/{model.uuid}][%d] updateHubModelOK  %+v", 200, o.Payload)
}

func (o *UpdateHubModelOK) GetPayload() *service_model.V1HubModel {
	return o.Payload
}

func (o *UpdateHubModelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1HubModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHubModelNoContent creates a UpdateHubModelNoContent with default headers values
func NewUpdateHubModelNoContent() *UpdateHubModelNoContent {
	return &UpdateHubModelNoContent{}
}

/*UpdateHubModelNoContent handles this case with default header values.

No content.
*/
type UpdateHubModelNoContent struct {
	Payload interface{}
}

func (o *UpdateHubModelNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/models/{model.uuid}][%d] updateHubModelNoContent  %+v", 204, o.Payload)
}

func (o *UpdateHubModelNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateHubModelNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHubModelForbidden creates a UpdateHubModelForbidden with default headers values
func NewUpdateHubModelForbidden() *UpdateHubModelForbidden {
	return &UpdateHubModelForbidden{}
}

/*UpdateHubModelForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type UpdateHubModelForbidden struct {
	Payload interface{}
}

func (o *UpdateHubModelForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/models/{model.uuid}][%d] updateHubModelForbidden  %+v", 403, o.Payload)
}

func (o *UpdateHubModelForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateHubModelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHubModelNotFound creates a UpdateHubModelNotFound with default headers values
func NewUpdateHubModelNotFound() *UpdateHubModelNotFound {
	return &UpdateHubModelNotFound{}
}

/*UpdateHubModelNotFound handles this case with default header values.

Resource does not exist.
*/
type UpdateHubModelNotFound struct {
	Payload interface{}
}

func (o *UpdateHubModelNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/models/{model.uuid}][%d] updateHubModelNotFound  %+v", 404, o.Payload)
}

func (o *UpdateHubModelNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateHubModelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateHubModelDefault creates a UpdateHubModelDefault with default headers values
func NewUpdateHubModelDefault(code int) *UpdateHubModelDefault {
	return &UpdateHubModelDefault{
		_statusCode: code,
	}
}

/*UpdateHubModelDefault handles this case with default header values.

An unexpected error response
*/
type UpdateHubModelDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the update hub model default response
func (o *UpdateHubModelDefault) Code() int {
	return o._statusCode
}

func (o *UpdateHubModelDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/models/{model.uuid}][%d] UpdateHubModel default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateHubModelDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdateHubModelDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
