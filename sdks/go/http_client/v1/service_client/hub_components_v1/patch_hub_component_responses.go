// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package hub_components_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// PatchHubComponentReader is a Reader for the PatchHubComponent structure.
type PatchHubComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchHubComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchHubComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchHubComponentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPatchHubComponentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchHubComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchHubComponentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchHubComponentOK creates a PatchHubComponentOK with default headers values
func NewPatchHubComponentOK() *PatchHubComponentOK {
	return &PatchHubComponentOK{}
}

/*PatchHubComponentOK handles this case with default header values.

A successful response.
*/
type PatchHubComponentOK struct {
	Payload *service_model.V1HubComponent
}

func (o *PatchHubComponentOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/components/{component.uuid}][%d] patchHubComponentOK  %+v", 200, o.Payload)
}

func (o *PatchHubComponentOK) GetPayload() *service_model.V1HubComponent {
	return o.Payload
}

func (o *PatchHubComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1HubComponent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchHubComponentNoContent creates a PatchHubComponentNoContent with default headers values
func NewPatchHubComponentNoContent() *PatchHubComponentNoContent {
	return &PatchHubComponentNoContent{}
}

/*PatchHubComponentNoContent handles this case with default header values.

No content.
*/
type PatchHubComponentNoContent struct {
	Payload interface{}
}

func (o *PatchHubComponentNoContent) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/components/{component.uuid}][%d] patchHubComponentNoContent  %+v", 204, o.Payload)
}

func (o *PatchHubComponentNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchHubComponentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchHubComponentForbidden creates a PatchHubComponentForbidden with default headers values
func NewPatchHubComponentForbidden() *PatchHubComponentForbidden {
	return &PatchHubComponentForbidden{}
}

/*PatchHubComponentForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type PatchHubComponentForbidden struct {
	Payload interface{}
}

func (o *PatchHubComponentForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/components/{component.uuid}][%d] patchHubComponentForbidden  %+v", 403, o.Payload)
}

func (o *PatchHubComponentForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchHubComponentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchHubComponentNotFound creates a PatchHubComponentNotFound with default headers values
func NewPatchHubComponentNotFound() *PatchHubComponentNotFound {
	return &PatchHubComponentNotFound{}
}

/*PatchHubComponentNotFound handles this case with default header values.

Resource does not exist.
*/
type PatchHubComponentNotFound struct {
	Payload interface{}
}

func (o *PatchHubComponentNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/components/{component.uuid}][%d] patchHubComponentNotFound  %+v", 404, o.Payload)
}

func (o *PatchHubComponentNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *PatchHubComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchHubComponentDefault creates a PatchHubComponentDefault with default headers values
func NewPatchHubComponentDefault(code int) *PatchHubComponentDefault {
	return &PatchHubComponentDefault{
		_statusCode: code,
	}
}

/*PatchHubComponentDefault handles this case with default header values.

An unexpected error response
*/
type PatchHubComponentDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the patch hub component default response
func (o *PatchHubComponentDefault) Code() int {
	return o._statusCode
}

func (o *PatchHubComponentDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v1/orgs/{owner}/components/{component.uuid}][%d] PatchHubComponent default  %+v", o._statusCode, o.Payload)
}

func (o *PatchHubComponentDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *PatchHubComponentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
