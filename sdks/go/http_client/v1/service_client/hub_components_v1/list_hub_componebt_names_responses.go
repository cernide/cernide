// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package hub_components_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListHubComponebtNamesReader is a Reader for the ListHubComponebtNames structure.
type ListHubComponebtNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListHubComponebtNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListHubComponebtNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListHubComponebtNamesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListHubComponebtNamesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListHubComponebtNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListHubComponebtNamesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListHubComponebtNamesOK creates a ListHubComponebtNamesOK with default headers values
func NewListHubComponebtNamesOK() *ListHubComponebtNamesOK {
	return &ListHubComponebtNamesOK{}
}

/*ListHubComponebtNamesOK handles this case with default header values.

A successful response.
*/
type ListHubComponebtNamesOK struct {
	Payload *service_model.V1ListHubComponentsResponse
}

func (o *ListHubComponebtNamesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/components/names][%d] listHubComponebtNamesOK  %+v", 200, o.Payload)
}

func (o *ListHubComponebtNamesOK) GetPayload() *service_model.V1ListHubComponentsResponse {
	return o.Payload
}

func (o *ListHubComponebtNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListHubComponentsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListHubComponebtNamesNoContent creates a ListHubComponebtNamesNoContent with default headers values
func NewListHubComponebtNamesNoContent() *ListHubComponebtNamesNoContent {
	return &ListHubComponebtNamesNoContent{}
}

/*ListHubComponebtNamesNoContent handles this case with default header values.

No content.
*/
type ListHubComponebtNamesNoContent struct {
	Payload interface{}
}

func (o *ListHubComponebtNamesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/components/names][%d] listHubComponebtNamesNoContent  %+v", 204, o.Payload)
}

func (o *ListHubComponebtNamesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListHubComponebtNamesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListHubComponebtNamesForbidden creates a ListHubComponebtNamesForbidden with default headers values
func NewListHubComponebtNamesForbidden() *ListHubComponebtNamesForbidden {
	return &ListHubComponebtNamesForbidden{}
}

/*ListHubComponebtNamesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ListHubComponebtNamesForbidden struct {
	Payload interface{}
}

func (o *ListHubComponebtNamesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/components/names][%d] listHubComponebtNamesForbidden  %+v", 403, o.Payload)
}

func (o *ListHubComponebtNamesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListHubComponebtNamesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListHubComponebtNamesNotFound creates a ListHubComponebtNamesNotFound with default headers values
func NewListHubComponebtNamesNotFound() *ListHubComponebtNamesNotFound {
	return &ListHubComponebtNamesNotFound{}
}

/*ListHubComponebtNamesNotFound handles this case with default header values.

Resource does not exist.
*/
type ListHubComponebtNamesNotFound struct {
	Payload interface{}
}

func (o *ListHubComponebtNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/components/names][%d] listHubComponebtNamesNotFound  %+v", 404, o.Payload)
}

func (o *ListHubComponebtNamesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListHubComponebtNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListHubComponebtNamesDefault creates a ListHubComponebtNamesDefault with default headers values
func NewListHubComponebtNamesDefault(code int) *ListHubComponebtNamesDefault {
	return &ListHubComponebtNamesDefault{
		_statusCode: code,
	}
}

/*ListHubComponebtNamesDefault handles this case with default header values.

An unexpected error response
*/
type ListHubComponebtNamesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list hub componebt names default response
func (o *ListHubComponebtNamesDefault) Code() int {
	return o._statusCode
}

func (o *ListHubComponebtNamesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/components/names][%d] ListHubComponebtNames default  %+v", o._statusCode, o.Payload)
}

func (o *ListHubComponebtNamesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListHubComponebtNamesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
