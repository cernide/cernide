// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package run_profiles_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetRunProfileReader is a Reader for the GetRunProfile structure.
type GetRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetRunProfileNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetRunProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRunProfileOK creates a GetRunProfileOK with default headers values
func NewGetRunProfileOK() *GetRunProfileOK {
	return &GetRunProfileOK{}
}

/*GetRunProfileOK handles this case with default header values.

A successful response.
*/
type GetRunProfileOK struct {
	Payload *service_model.V1RunProfile
}

func (o *GetRunProfileOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/run_profiles/{uuid}][%d] getRunProfileOK  %+v", 200, o.Payload)
}

func (o *GetRunProfileOK) GetPayload() *service_model.V1RunProfile {
	return o.Payload
}

func (o *GetRunProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1RunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileNoContent creates a GetRunProfileNoContent with default headers values
func NewGetRunProfileNoContent() *GetRunProfileNoContent {
	return &GetRunProfileNoContent{}
}

/*GetRunProfileNoContent handles this case with default header values.

No content.
*/
type GetRunProfileNoContent struct {
	Payload interface{}
}

func (o *GetRunProfileNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/run_profiles/{uuid}][%d] getRunProfileNoContent  %+v", 204, o.Payload)
}

func (o *GetRunProfileNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunProfileNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileForbidden creates a GetRunProfileForbidden with default headers values
func NewGetRunProfileForbidden() *GetRunProfileForbidden {
	return &GetRunProfileForbidden{}
}

/*GetRunProfileForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type GetRunProfileForbidden struct {
	Payload interface{}
}

func (o *GetRunProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/run_profiles/{uuid}][%d] getRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *GetRunProfileForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileNotFound creates a GetRunProfileNotFound with default headers values
func NewGetRunProfileNotFound() *GetRunProfileNotFound {
	return &GetRunProfileNotFound{}
}

/*GetRunProfileNotFound handles this case with default header values.

Resource does not exist.
*/
type GetRunProfileNotFound struct {
	Payload interface{}
}

func (o *GetRunProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/run_profiles/{uuid}][%d] getRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *GetRunProfileNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunProfileDefault creates a GetRunProfileDefault with default headers values
func NewGetRunProfileDefault(code int) *GetRunProfileDefault {
	return &GetRunProfileDefault{
		_statusCode: code,
	}
}

/*GetRunProfileDefault handles this case with default header values.

An unexpected error response
*/
type GetRunProfileDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the get run profile default response
func (o *GetRunProfileDefault) Code() int {
	return o._statusCode
}

func (o *GetRunProfileDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/run_profiles/{uuid}][%d] GetRunProfile default  %+v", o._statusCode, o.Payload)
}

func (o *GetRunProfileDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetRunProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
