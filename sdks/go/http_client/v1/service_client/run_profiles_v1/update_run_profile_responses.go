// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package run_profiles_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// UpdateRunProfileReader is a Reader for the UpdateRunProfile structure.
type UpdateRunProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRunProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRunProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateRunProfileNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateRunProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRunProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateRunProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateRunProfileOK creates a UpdateRunProfileOK with default headers values
func NewUpdateRunProfileOK() *UpdateRunProfileOK {
	return &UpdateRunProfileOK{}
}

/*UpdateRunProfileOK handles this case with default header values.

A successful response.
*/
type UpdateRunProfileOK struct {
	Payload *service_model.V1RunProfile
}

func (o *UpdateRunProfileOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/run_profiles/{run_profile.uuid}][%d] updateRunProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateRunProfileOK) GetPayload() *service_model.V1RunProfile {
	return o.Payload
}

func (o *UpdateRunProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1RunProfile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunProfileNoContent creates a UpdateRunProfileNoContent with default headers values
func NewUpdateRunProfileNoContent() *UpdateRunProfileNoContent {
	return &UpdateRunProfileNoContent{}
}

/*UpdateRunProfileNoContent handles this case with default header values.

No content.
*/
type UpdateRunProfileNoContent struct {
	Payload interface{}
}

func (o *UpdateRunProfileNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/run_profiles/{run_profile.uuid}][%d] updateRunProfileNoContent  %+v", 204, o.Payload)
}

func (o *UpdateRunProfileNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunProfileNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunProfileForbidden creates a UpdateRunProfileForbidden with default headers values
func NewUpdateRunProfileForbidden() *UpdateRunProfileForbidden {
	return &UpdateRunProfileForbidden{}
}

/*UpdateRunProfileForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type UpdateRunProfileForbidden struct {
	Payload interface{}
}

func (o *UpdateRunProfileForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/run_profiles/{run_profile.uuid}][%d] updateRunProfileForbidden  %+v", 403, o.Payload)
}

func (o *UpdateRunProfileForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunProfileNotFound creates a UpdateRunProfileNotFound with default headers values
func NewUpdateRunProfileNotFound() *UpdateRunProfileNotFound {
	return &UpdateRunProfileNotFound{}
}

/*UpdateRunProfileNotFound handles this case with default header values.

Resource does not exist.
*/
type UpdateRunProfileNotFound struct {
	Payload interface{}
}

func (o *UpdateRunProfileNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/run_profiles/{run_profile.uuid}][%d] updateRunProfileNotFound  %+v", 404, o.Payload)
}

func (o *UpdateRunProfileNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateRunProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunProfileDefault creates a UpdateRunProfileDefault with default headers values
func NewUpdateRunProfileDefault(code int) *UpdateRunProfileDefault {
	return &UpdateRunProfileDefault{
		_statusCode: code,
	}
}

/*UpdateRunProfileDefault handles this case with default header values.

An unexpected error response
*/
type UpdateRunProfileDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the update run profile default response
func (o *UpdateRunProfileDefault) Code() int {
	return o._statusCode
}

func (o *UpdateRunProfileDefault) Error() string {
	return fmt.Sprintf("[PUT /api/v1/orgs/{owner}/run_profiles/{run_profile.uuid}][%d] UpdateRunProfile default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateRunProfileDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *UpdateRunProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
