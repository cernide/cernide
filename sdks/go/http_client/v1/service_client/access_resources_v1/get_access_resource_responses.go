// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package access_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// GetAccessResourceReader is a Reader for the GetAccessResource structure.
type GetAccessResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccessResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccessResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewGetAccessResourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetAccessResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccessResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAccessResourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAccessResourceOK creates a GetAccessResourceOK with default headers values
func NewGetAccessResourceOK() *GetAccessResourceOK {
	return &GetAccessResourceOK{}
}

/*GetAccessResourceOK handles this case with default header values.

A successful response.
*/
type GetAccessResourceOK struct {
	Payload *service_model.V1AccessResource
}

func (o *GetAccessResourceOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources/{uuid}][%d] getAccessResourceOK  %+v", 200, o.Payload)
}

func (o *GetAccessResourceOK) GetPayload() *service_model.V1AccessResource {
	return o.Payload
}

func (o *GetAccessResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1AccessResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessResourceNoContent creates a GetAccessResourceNoContent with default headers values
func NewGetAccessResourceNoContent() *GetAccessResourceNoContent {
	return &GetAccessResourceNoContent{}
}

/*GetAccessResourceNoContent handles this case with default header values.

No content.
*/
type GetAccessResourceNoContent struct {
	Payload interface{}
}

func (o *GetAccessResourceNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources/{uuid}][%d] getAccessResourceNoContent  %+v", 204, o.Payload)
}

func (o *GetAccessResourceNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAccessResourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessResourceForbidden creates a GetAccessResourceForbidden with default headers values
func NewGetAccessResourceForbidden() *GetAccessResourceForbidden {
	return &GetAccessResourceForbidden{}
}

/*GetAccessResourceForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type GetAccessResourceForbidden struct {
	Payload interface{}
}

func (o *GetAccessResourceForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources/{uuid}][%d] getAccessResourceForbidden  %+v", 403, o.Payload)
}

func (o *GetAccessResourceForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAccessResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessResourceNotFound creates a GetAccessResourceNotFound with default headers values
func NewGetAccessResourceNotFound() *GetAccessResourceNotFound {
	return &GetAccessResourceNotFound{}
}

/*GetAccessResourceNotFound handles this case with default header values.

Resource does not exist.
*/
type GetAccessResourceNotFound struct {
	Payload interface{}
}

func (o *GetAccessResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources/{uuid}][%d] getAccessResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetAccessResourceNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *GetAccessResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccessResourceDefault creates a GetAccessResourceDefault with default headers values
func NewGetAccessResourceDefault(code int) *GetAccessResourceDefault {
	return &GetAccessResourceDefault{
		_statusCode: code,
	}
}

/*GetAccessResourceDefault handles this case with default header values.

An unexpected error response
*/
type GetAccessResourceDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the get access resource default response
func (o *GetAccessResourceDefault) Code() int {
	return o._statusCode
}

func (o *GetAccessResourceDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources/{uuid}][%d] GetAccessResource default  %+v", o._statusCode, o.Payload)
}

func (o *GetAccessResourceDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *GetAccessResourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
