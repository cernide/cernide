// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-swagger; DO NOT EDIT.

package access_resources_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/polyaxon/polyaxon/sdks/go/http_client/v1/service_model"
)

// ListAccessResourcesReader is a Reader for the ListAccessResources structure.
type ListAccessResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAccessResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAccessResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewListAccessResourcesNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListAccessResourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAccessResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListAccessResourcesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAccessResourcesOK creates a ListAccessResourcesOK with default headers values
func NewListAccessResourcesOK() *ListAccessResourcesOK {
	return &ListAccessResourcesOK{}
}

/*ListAccessResourcesOK handles this case with default header values.

A successful response.
*/
type ListAccessResourcesOK struct {
	Payload *service_model.V1ListAccessResourcesResponse
}

func (o *ListAccessResourcesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources][%d] listAccessResourcesOK  %+v", 200, o.Payload)
}

func (o *ListAccessResourcesOK) GetPayload() *service_model.V1ListAccessResourcesResponse {
	return o.Payload
}

func (o *ListAccessResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.V1ListAccessResourcesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAccessResourcesNoContent creates a ListAccessResourcesNoContent with default headers values
func NewListAccessResourcesNoContent() *ListAccessResourcesNoContent {
	return &ListAccessResourcesNoContent{}
}

/*ListAccessResourcesNoContent handles this case with default header values.

No content.
*/
type ListAccessResourcesNoContent struct {
	Payload interface{}
}

func (o *ListAccessResourcesNoContent) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources][%d] listAccessResourcesNoContent  %+v", 204, o.Payload)
}

func (o *ListAccessResourcesNoContent) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAccessResourcesNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAccessResourcesForbidden creates a ListAccessResourcesForbidden with default headers values
func NewListAccessResourcesForbidden() *ListAccessResourcesForbidden {
	return &ListAccessResourcesForbidden{}
}

/*ListAccessResourcesForbidden handles this case with default header values.

You don't have permission to access the resource.
*/
type ListAccessResourcesForbidden struct {
	Payload interface{}
}

func (o *ListAccessResourcesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources][%d] listAccessResourcesForbidden  %+v", 403, o.Payload)
}

func (o *ListAccessResourcesForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAccessResourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAccessResourcesNotFound creates a ListAccessResourcesNotFound with default headers values
func NewListAccessResourcesNotFound() *ListAccessResourcesNotFound {
	return &ListAccessResourcesNotFound{}
}

/*ListAccessResourcesNotFound handles this case with default header values.

Resource does not exist.
*/
type ListAccessResourcesNotFound struct {
	Payload interface{}
}

func (o *ListAccessResourcesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources][%d] listAccessResourcesNotFound  %+v", 404, o.Payload)
}

func (o *ListAccessResourcesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ListAccessResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAccessResourcesDefault creates a ListAccessResourcesDefault with default headers values
func NewListAccessResourcesDefault(code int) *ListAccessResourcesDefault {
	return &ListAccessResourcesDefault{
		_statusCode: code,
	}
}

/*ListAccessResourcesDefault handles this case with default header values.

An unexpected error response
*/
type ListAccessResourcesDefault struct {
	_statusCode int

	Payload *service_model.RuntimeError
}

// Code gets the status code for the list access resources default response
func (o *ListAccessResourcesDefault) Code() int {
	return o._statusCode
}

func (o *ListAccessResourcesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/orgs/{owner}/access_resources][%d] ListAccessResources default  %+v", o._statusCode, o.Payload)
}

func (o *ListAccessResourcesDefault) GetPayload() *service_model.RuntimeError {
	return o.Payload
}

func (o *ListAccessResourcesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(service_model.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
