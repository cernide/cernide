openapi: 3.0.1
info:
  contact:
    email: contact@polyaxon.com
    name: Polyaxon sdk
    url: https://github.com/polyaxon/polyaxon
  description: Polyaxon SDKs and REST API specification.
  title: Polyaxon SDKs and REST API specification.
  version: 1.4.0-rc8
servers:
- url: /
security:
- ApiKey: []
paths:
  /api/v1/archives/{user}/projects:
    get:
      operationId: ListArchivedProjects
      parameters:
      - description: User
        in: path
        name: user
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List archived projects for user
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/archives/{user}/runs:
    get:
      operationId: ListArchivedRuns
      parameters:
      - description: User
        in: path
        name: user
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List archived runs for user
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/auth/change-password:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PasswordChange'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Change password
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/auth/reset-password:
    post:
      operationId: ResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UserEmail'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Reset password
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/auth/reset-password-confirm:
    post:
      operationId: ResetPasswordConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PasswordChange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Reset password confirm
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/auth/signup:
    post:
      operationId: Signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1UserSingup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Signup
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/auth/token:
    post:
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Credentials'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Login
      tags:
      - AuthV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/bookmarks/{user}/projects:
    get:
      operationId: ListBookmarkedProjects
      parameters:
      - description: User
        in: path
        name: user
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBookmarksResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List bookmarked projects for user
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/bookmarks/{user}/runs:
    get:
      operationId: ListBookmarkedRuns
      parameters:
      - description: User
        in: path
        name: user
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListBookmarksResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List bookmarked runs for user
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/compatibility/{uuid}/{version}/{service}:
    get:
      operationId: GetCompatibility
      parameters:
      - description: UUid
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Version
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: Service
        in: path
        name: service
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Compatibility'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get compatibility versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/installation:
    get:
      operationId: GetInstallation
      parameters:
      - description: auth.
        in: query
        name: auth
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Installation'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get installation versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/log_handler:
    get:
      operationId: GetLogHandler
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1LogHandler'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get log handler versions
      tags:
      - VersionsV1
      x-accepts: application/json
  /api/v1/orgs/create:
    post:
      operationId: CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/list:
    get:
      operationId: ListOrganizations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organizations
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/names:
    get:
      operationId: ListOrganizationNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organizations names
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}:
    delete:
      operationId: DeleteOrganization
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner usage query param.
        in: query
        name: usage
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganization
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner usage query param.
        in: query
        name: usage
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganization
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganization
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents:
    get:
      operationId: ListAgents
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAgentsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List agents
      tags:
      - AgentsV1
      x-accepts: application/json
    post:
      operationId: CreateAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/names:
    get:
      operationId: ListAgentNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListAgentsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List agents names
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent.uuid}:
    patch:
      operationId: PatchAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent.uuid}/sync:
    patch:
      operationId: SyncAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: agent.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Agent'
        description: Agent body
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Sync agent
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent}/queues:
    post:
      operationId: CreateQueue
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Agent that consumes the queue
        in: path
        name: agent
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent}/queues/{queue.uuid}:
    patch:
      operationId: PatchQueue
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Agent that consumes the queue
        in: path
        name: agent
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: queue.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateQueue
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Agent that consumes the queue
        in: path
        name: agent
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: queue.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Queue'
        description: Queue body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update queue
      tags:
      - QueuesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{agent}/token:
    patch:
      operationId: PatchAgentToken
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Agent
        in: path
        name: agent
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch agent token
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateAgentToken
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Agent
        in: path
        name: agent
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update agent token
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{entity}/queues/{uuid}:
    delete:
      operationId: DeleteQueue
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete queue
      tags:
      - QueuesV1
      x-accepts: application/json
    get:
      operationId: GetQueue
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Queue'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get queue
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{name}/queues:
    get:
      operationId: ListQueues
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List queues
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{name}/queues/names:
    get:
      operationId: ListQueueNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List queues names
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}:
    delete:
      operationId: DeleteAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Owner of the namespace.
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete agent
      tags:
      - AgentsV1
      x-accepts: application/json
    get:
      operationId: GetAgent
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Owner of the namespace.
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Agent'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/state:
    get:
      operationId: GetAgentState
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1AgentStateResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get State (queues/runs)
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/statuses:
    get:
      operationId: GetAgentStatuses
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent status
      tags:
      - AgentsV1
      x-accepts: application/json
    post:
      operationId: CreateAgentStatus
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1AgentStatusBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new run status
      tags:
      - AgentsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/agents/{uuid}/token:
    get:
      operationId: GetAgentToken
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get agent token
      tags:
      - AgentsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections:
    get:
      operationId: ListConnections
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListConnectionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List connections
      tags:
      - ConnectionsV1
      x-accepts: application/json
    post:
      operationId: CreateConnection
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/names:
    get:
      operationId: ListConnectionNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListConnectionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List connections names
      tags:
      - ConnectionsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/{connection.uuid}:
    patch:
      operationId: PatchConnection
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: connection.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateConnection
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: connection.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ConnectionResponse'
        description: Connection body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update connection
      tags:
      - ConnectionsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/connections/{uuid}:
    delete:
      operationId: DeleteConnection
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete connection
      tags:
      - ConnectionsV1
      x-accepts: application/json
    get:
      operationId: GetConnection
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ConnectionResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get connection
      tags:
      - ConnectionsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards:
    get:
      operationId: ListDashboards
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List dashboards
      tags:
      - DashboardsV1
      x-accepts: application/json
    post:
      operationId: CreateDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/names:
    get:
      operationId: ListDashboardNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List dashboard names
      tags:
      - DashboardsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/{dashboard.uuid}:
    patch:
      operationId: PatchDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update dashboard
      tags:
      - DashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/dashboards/{uuid}:
    delete:
      operationId: DeleteDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete dashboard
      tags:
      - DashboardsV1
      x-accepts: application/json
    get:
      operationId: GetDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get dashboard
      tags:
      - DashboardsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/invitations:
    delete:
      operationId: DeleteOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: User.
        in: query
        name: member.user
        schema:
          type: string
      - description: Read-only User email.
        in: query
        name: member.user_email
        schema:
          type: string
      - description: Role.
        in: query
        name: member.role
        schema:
          type: string
      - description: Optional time when the entity was created.
        in: query
        name: member.created_at
        schema:
          format: date-time
          type: string
      - description: Optional last time the entity was updated.
        in: query
        name: member.updated_at
        schema:
          format: date-time
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization invitation details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: User.
        in: query
        name: member.user
        schema:
          type: string
      - description: Read-only User email.
        in: query
        name: member.user_email
        schema:
          type: string
      - description: Role.
        in: query
        name: member.role
        schema:
          type: string
      - description: Optional time when the entity was created.
        in: query
        name: member.created_at
        schema:
          format: date-time
          type: string
      - description: Optional last time the entity was updated.
        in: query
        name: member.updated_at
        schema:
          format: date-time
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization invitation details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization invitation
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationInvitation
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization invitation
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members:
    get:
      operationId: ListOrganizationMembers
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization members
      tags:
      - OrganizationsV1
      x-accepts: application/json
    post:
      operationId: CreateOrganizationMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/names:
    get:
      operationId: ListOrganizationMemberNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListOrganizationMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization member names
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/{member.user}:
    patch:
      operationId: PatchOrganizationMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: User
        in: path
        name: member.user
        required: true
        schema:
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: User
        in: path
        name: member.user
        required: true
        schema:
          type: string
      - description: Optional email.
        in: query
        name: email
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OrganizationMember'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization member
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/members/{name}:
    delete:
      operationId: DeleteOrganizationMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete organization member details
      tags:
      - OrganizationsV1
      x-accepts: application/json
    get:
      operationId: GetOrganizationMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrganizationMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization member details
      tags:
      - OrganizationsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/plan:
    post:
      operationId: OrganizationPlan
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Organization plan
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets:
    get:
      operationId: ListPresets
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPresetsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List scheduling presets
      tags:
      - PresetsV1
      x-accepts: application/json
    post:
      operationId: CreatePreset
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create scheduling presets
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/names:
    get:
      operationId: ListPresetNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListPresetsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List scheduling presets names
      tags:
      - PresetsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/{preset.uuid}:
    patch:
      operationId: PatchPreset
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: preset.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch scheduling preset
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdatePreset
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: preset.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Preset'
        description: Preset body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update scheduling preset
      tags:
      - PresetsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/presets/{uuid}:
    delete:
      operationId: DeletePreset
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Owner of the namespace.
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete scheduling preset
      tags:
      - PresetsV1
      x-accepts: application/json
    get:
      operationId: GetPreset
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Owner of the namespace.
        in: query
        name: entity
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Preset'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get scheduling preset
      tags:
      - PresetsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/queues:
    get:
      operationId: ListOrganizationQueues
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organization level queues
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/queues/names:
    get:
      operationId: ListOrganizationQueueNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListQueuesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List organization level queues names
      tags:
      - QueuesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches:
    get:
      operationId: ListSearches
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List searches
      tags:
      - SearchesV1
      x-accepts: application/json
    post:
      operationId: CreateSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/names:
    get:
      operationId: ListSearchNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List search names
      tags:
      - SearchesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/{search.uuid}:
    patch:
      operationId: PatchSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update search
      tags:
      - SearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/searches/{uuid}:
    delete:
      operationId: DeleteSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete search
      tags:
      - SearchesV1
      x-accepts: application/json
    get:
      operationId: GetSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get search
      tags:
      - SearchesV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/settings:
    get:
      operationId: GetOrganizationSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: User.
        in: query
        name: organization.user
        schema:
          type: string
      - description: Read-only User email.
        in: query
        name: organization.user_email
        schema:
          type: string
      - description: Name.
        in: query
        name: organization.name
        schema:
          type: string
      - description: Optional flag to tell if this organization is public.
        in: query
        name: organization.is_public
        schema:
          type: boolean
      - description: Optional time when the entity was created.
        in: query
        name: organization.created_at
        schema:
          format: date-time
          type: string
      - description: Optional last time the entity was updated.
        in: query
        name: organization.updated_at
        schema:
          format: date-time
          type: string
      - description: Current user's role in this org.
        in: query
        name: organization.role
        schema:
          type: string
      - description: Default queue.
        in: query
        name: organization.queue
        schema:
          type: string
      - description: Default preset.
        in: query
        name: organization.preset
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get organization settings
      tags:
      - OrganizationsV1
      x-accepts: application/json
    patch:
      operationId: PatchOrganizationSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch oranization settings
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateOrganizationSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Organization'
        description: Organization body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Organization'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update organization settings
      tags:
      - OrganizationsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams:
    get:
      operationId: ListTeams
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List teams
      tags:
      - TeamsV1
      x-accepts: application/json
    post:
      operationId: CreateTeam
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/names:
    get:
      operationId: ListTeamNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List teams names
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}:
    delete:
      operationId: DeleteTeam
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete team
      tags:
      - TeamsV1
      x-accepts: application/json
    get:
      operationId: GetTeam
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{name}/members:
    get:
      operationId: ListTeamMembers
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTeamMembersResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team members
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team.name}:
    patch:
      operationId: PatchTeam
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: team.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateTeam
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Name
        in: path
        name: team.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Team'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Team'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update team
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members:
    post:
      operationId: CreateTeamMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Team
        in: path
        name: team
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members/{member.user}:
    patch:
      operationId: PatchTeamMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Team
        in: path
        name: team
        required: true
        schema:
          type: string
      - description: User
        in: path
        name: member.user
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateTeamMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Team
        in: path
        name: team
        required: true
        schema:
          type: string
      - description: User
        in: path
        name: member.user
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TeamMember'
        description: Team body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update team member
      tags:
      - TeamsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/orgs/{owner}/teams/{team}/members/{user}:
    delete:
      operationId: DeleteTeamMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Team under namesapce
        in: path
        name: team
        required: true
        schema:
          type: string
      - description: Member under team
        in: path
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete team member details
      tags:
      - TeamsV1
      x-accepts: application/json
    get:
      operationId: GetTeamMember
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Team under namesapce
        in: path
        name: team
        required: true
        schema:
          type: string
      - description: Member under team
        in: path
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TeamMember'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get team member details
      tags:
      - TeamsV1
      x-accepts: application/json
  /api/v1/users:
    get:
      operationId: GetUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get current user
      tags:
      - UsersV1
      x-accepts: application/json
    patch:
      operationId: PatchUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch current user
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1User'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update current user
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/users/tokens:
    get:
      operationId: ListTokens
      parameters:
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListTokenResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List tokens
      tags:
      - UsersV1
      x-accepts: application/json
    post:
      operationId: CreateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/users/tokens/{token.uuid}:
    patch:
      operationId: PatchToken
      parameters:
      - description: UUID
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateToken
      parameters:
      - description: UUID
        in: path
        name: token.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Token'
        description: Token body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update token
      tags:
      - UsersV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/users/tokens/{uuid}:
    delete:
      operationId: DeleteToken
      parameters:
      - description: UUid of the namespace
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete token
      tags:
      - UsersV1
      x-accepts: application/json
    get:
      operationId: GetToken
      parameters:
      - description: UUid of the namespace
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Token'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get token
      tags:
      - UsersV1
      x-accepts: application/json
  /api/v1/{entity.owner}/{entity.entity}/runs/{entity.uuid}/copy:
    post:
      operationId: CopyRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: entity.owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity.entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: entity.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restart run with copy
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{entity.owner}/{entity.entity}/runs/{entity.uuid}/restart:
    post:
      operationId: RestartRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: entity.owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity.entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: entity.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restart run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{entity.owner}/{entity.entity}/runs/{entity.uuid}/resume:
    post:
      operationId: ResumeRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: entity.owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity.entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: entity.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Resume run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/create:
    post:
      operationId: CreateComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentHub'
        description: Component body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHub'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create hub component
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/list:
    get:
      operationId: ListComponentHubs
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListComponentHubsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List hub components
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/names:
    get:
      operationId: ListComponentHubNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListComponentHubsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List hub component names
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{component.name}:
    patch:
      operationId: PatchComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: component.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentHub'
        description: Component body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHub'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch hub component
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: component.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentHub'
        description: Component body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHub'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update hub component
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/{component}/settings:
    patch:
      operationId: PatchComponentHubSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Hub name
        in: path
        name: component
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentHubSettings'
        description: Hub settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHubSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch hub component settings
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateComponentHubSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Hub name
        in: path
        name: component
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentHubSettings'
        description: Hub settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHubSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update hub component settings
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/{component}/versions:
    post:
      operationId: CreateComponentVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component name
        in: path
        name: component
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentVersion'
        description: Component version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create component version
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/{component}/versions/{version.name}:
    patch:
      operationId: PatchComponentVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component name
        in: path
        name: component
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: version.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentVersion'
        description: Component version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch component version
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateComponentVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component name
        in: path
        name: component
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: version.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ComponentVersion'
        description: Component version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update component version
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/{entity}/versions/{name}:
    delete:
      operationId: DeleteComponentVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete component version
      tags:
      - ComponentHubV1
      x-accepts: application/json
    get:
      operationId: GetComponentVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get component version
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{entity}/versions/{name}/stages:
    get:
      operationId: GetComponentVersionStages
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get component version stages
      tags:
      - ComponentHubV1
      x-accepts: application/json
    post:
      operationId: CreateComponentVersionStage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Name of the version to apply the stage to
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityStageBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new component version stage
      tags:
      - ComponentHubV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}:
    delete:
      operationId: DeleteComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete hub component
      tags:
      - ComponentHubV1
      x-accepts: application/json
    get:
      operationId: GetComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHub'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get hub component
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/archive:
    post:
      operationId: ArchiveComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive hub component
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/bookmark:
    post:
      operationId: BookmarkComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark component hub
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/restore:
    post:
      operationId: RestoreComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore hub component
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/settings:
    get:
      operationId: GetComponentHubSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ComponentHubSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get hub component settings
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/unbookmark:
    delete:
      operationId: UnbookmarkComponentHub
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark component hub
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/versions:
    get:
      operationId: ListComponentVersions
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListComponentVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List component versions
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/hub/{name}/versions/names:
    get:
      operationId: ListComponentVersionNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListComponentVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List component version names
      tags:
      - ComponentHubV1
      x-accepts: application/json
  /api/v1/{owner}/projects/create:
    post:
      operationId: CreateProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/projects/list:
    get:
      operationId: ListProjects
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List projects
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/projects/names:
    get:
      operationId: ListProjectNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListProjectsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project names
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/registry/create:
    post:
      operationId: CreateModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelRegistry'
        description: Model body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistry'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create registry model
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/list:
    get:
      operationId: ListModelRegistries
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListModelRegistriesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List registry models
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/names:
    get:
      operationId: ListModelRegistryNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListModelRegistriesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List registry model names
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{entity}/versions/{name}:
    delete:
      operationId: DeleteModelVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete model version
      tags:
      - ModelRegistryV1
      x-accepts: application/json
    get:
      operationId: GetModelVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get model version
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{entity}/versions/{name}/stages:
    get:
      operationId: GetModelVersionStages
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get model version stages
      tags:
      - ModelRegistryV1
      x-accepts: application/json
    post:
      operationId: CreateModelVersionStage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Name of the version to apply the stage to
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityStageBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Stage'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new model version stage
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/{model.name}:
    patch:
      operationId: PatchModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: model.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelRegistry'
        description: Model body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistry'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch registry model
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: model.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelRegistry'
        description: Model body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistry'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update registry model
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/{model}/settings:
    patch:
      operationId: PatchModelRegistrySettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Model name
        in: path
        name: model
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelRegistrySettings'
        description: Model settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistrySettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch registry model settings
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateModelRegistrySettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Model name
        in: path
        name: model
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelRegistrySettings'
        description: Model settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistrySettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update registry model settings
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/{model}/versions:
    post:
      operationId: CreateModelVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Model name
        in: path
        name: model
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelVersion'
        description: Model version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create model version
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/{model}/versions/{version.name}:
    patch:
      operationId: PatchModelVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Model name
        in: path
        name: model
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: version.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelVersion'
        description: Model version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch model version
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateModelVersion
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Model name
        in: path
        name: model
        required: true
        schema:
          type: string
      - description: 'Optional component name, should be a valid fully qualified value:
          name[:version]'
        in: path
        name: version.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ModelVersion'
        description: Model version body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelVersion'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update model version
      tags:
      - ModelRegistryV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}:
    delete:
      operationId: DeleteModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
    get:
      operationId: GetModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistry'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/archive:
    post:
      operationId: ArchiveModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/bookmark:
    post:
      operationId: BookmarkModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/restore:
    post:
      operationId: RestoreModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/settings:
    get:
      operationId: GetModelRegistrySettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ModelRegistrySettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get registry model settings
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/unbookmark:
    delete:
      operationId: UnbookmarkModelRegistry
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark registry model
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/versions:
    get:
      operationId: ListModelVersions
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListModelVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List model versions
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/registry/{name}/versions/names:
    get:
      operationId: ListModelVersionNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListModelVersionsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List model versions names
      tags:
      - ModelRegistryV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/dashboards/{uuid}:
    delete:
      operationId: DeleteProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
    get:
      operationId: GetProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/dashboards/{uuid}/promote:
    post:
      operationId: PromoteProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Promote project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}:
    delete:
      operationId: DeleteRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/approve:
    post:
      operationId: ApproveRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/archive:
    post:
      operationId: ArchiveRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/artifacts_lineage:
    get:
      operationId: GetRunArtifactsLineage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity name under namesapce
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: SubEntity uuid
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/artifacts_lineage/names:
    get:
      operationId: GetRunArtifactsLineageNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity name under namesapce
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: SubEntity uuid
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage names
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/bookmark:
    post:
      operationId: BookmarkRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/impersonate:
    post:
      operationId: ImpersonateToken
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Auth'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Impersonate run token
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/invalidate:
    post:
      operationId: InvalidateRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/namespace:
    get:
      operationId: GetRunNamespace
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Run namespace
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/restore:
    post:
      operationId: RestoreRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/settings:
    get:
      operationId: GetRunSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Run settings
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/statuses:
    get:
      operationId: GetRunStatuses
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run statuses
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/stop:
    post:
      operationId: StopRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/start:
    post:
      operationId: StartRunTensorboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OwnerSubEntityResourceRequestByUid'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Start run tensorboard
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/tensorboard/stop:
    post:
      operationId: StopRunTensorboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop run tensorboard
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/runs/{uuid}/unbookmark:
    delete:
      operationId: UnbookmarkRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark run
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/searches/{uuid}:
    delete:
      operationId: DeleteProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
    get:
      operationId: GetProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{entity}/searches/{uuid}/promote:
    post:
      operationId: PromoteProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: entity
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Promote project search
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{name}:
    delete:
      operationId: DeleteProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete project
      tags:
      - ProjectsV1
      x-accepts: application/json
    get:
      operationId: GetProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/archive:
    post:
      operationId: ArchiveProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Archive project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/bookmark:
    post:
      operationId: BookmarkProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/ci:
    delete:
      operationId: DisableProjectCI
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Disbale project CI
      tags:
      - ProjectsV1
      x-accepts: application/json
    post:
      operationId: EnableProjectCI
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Enable project CI
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/dashboards:
    get:
      operationId: ListProjectDashboards
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project dashboards
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/dashboards/names:
    get:
      operationId: ListProjectDashboardNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListDashboardsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project dashboard
      tags:
      - ProjectDashboardsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/restore:
    post:
      operationId: RestoreProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Restore project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs:
    get:
      operationId: ListRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List runs
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/runs/artifacts_lineage:
    get:
      operationId: GetRunsArtifactsLineage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListRunArtifactsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get runs artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/searches:
    get:
      operationId: ListProjectSearches
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project searches
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/searches/names:
    get:
      operationId: ListProjectSearchNames
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Entity managing the resource
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: Pagination offset.
        in: query
        name: offset
        schema:
          format: int32
          type: integer
      - description: Limit size.
        in: query
        name: limit
        schema:
          format: int32
          type: integer
      - description: Sort to order the search.
        in: query
        name: sort
        schema:
          type: string
      - description: Query filter the search search.
        in: query
        name: query
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ListSearchesResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: List project search names
      tags:
      - ProjectSearchesV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/settings:
    get:
      operationId: GetProjectSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get Project settings
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{name}/unbookmark:
    delete:
      operationId: UnbookmarkProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Component under namesapce
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Unbookmark project
      tags:
      - ProjectsV1
      x-accepts: application/json
  /api/v1/{owner}/{project.name}:
    patch:
      operationId: PatchProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Required name
        in: path
        name: project.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProject
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Required name
        in: path
        name: project.name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Project'
        description: Project body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Project'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/dashboards:
    post:
      operationId: CreateProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/dashboards/{dashboard.uuid}:
    patch:
      operationId: PatchProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectDashboard
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: dashboard.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Dashboard'
        description: Dashboard body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Dashboard'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project dashboard
      tags:
      - ProjectDashboardsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs:
    post:
      operationId: CreateRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OperationBody'
        description: operation object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/approve:
    post:
      operationId: ApproveRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Approve runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/bookmark:
    post:
      operationId: BookmarkRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Bookmark runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/delete:
    delete:
      operationId: DeleteRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/invalidate:
    post:
      operationId: InvalidateRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Invalidate runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/stop:
    post:
      operationId: StopRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Uuids'
        description: Uuids of the entities
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Stop runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/tag:
    post:
      operationId: TagRuns
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntitiesTags'
        description: Data
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Tag runs
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{run.uuid}:
    patch:
      operationId: PatchRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateRun
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: run.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Run'
        description: Run object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Run'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update run
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/artifacts_lineage:
    post:
      operationId: CreateRunArtifactsLineage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1RunArtifacts'
        description: Run Artifacts
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create bulk run artifacts lineage
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/artifacts_lineage/{name}:
    delete:
      operationId: DeleteRunArtifactLineage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Artifact name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: namespace.
        in: query
        name: namespace
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifact lineage
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifactLineage
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Artifact name
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: namespace.
        in: query
        name: namespace
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1RunArtifact'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts lineage
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/statuses:
    post:
      operationId: CreateRunStatus
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityStatusBodyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Status'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create new run status
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/searches:
    post:
      operationId: CreateProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Create project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/searches/{search.uuid}:
    patch:
      operationId: PatchProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectSearch
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project under namesapce
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: UUID
        in: path
        name: search.uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1Search'
        description: Search body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Search'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project search
      tags:
      - ProjectSearchesV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/{owner}/{project}/settings:
    patch:
      operationId: PatchProjectSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project name
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectSettings'
        description: Project settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Patch project settings
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: UpdateProjectSettings
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project name
        in: path
        name: project
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1ProjectSettings'
        description: Project settings body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ProjectSettings'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Update project settings
      tags:
      - ProjectsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /schemas:
    get:
      operationId: NoOp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Schemas'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get random
      tags:
      - SchemasV1
      x-accepts: application/json
  /streams/v1/{namespace}/_internal/{owner}/{project}/runs/{uuid}/{kind}/logs:
    post:
      operationId: CollectRunLogs
      parameters:
      - in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Kind of the entity
        in: path
        name: kind
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Collect run logs
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/multi/events/{kind}:
    get:
      operationId: GetMultiRunEvents
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: The artifact kind
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - analysis
          - iteration
          - markdown
          type: string
      - description: Names query param.
        in: query
        name: names
        schema:
          type: string
      - description: Runs query param.
        in: query
        name: runs
        schema:
          type: string
      - description: Orient query param.
        in: query
        name: orient
        schema:
          type: string
      - description: Force query param.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get multi runs events
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifact:
    delete:
      operationId: DeleteRunArtifact
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Path query param.
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifact
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifact
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the experiement will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Artifact filepath.
        in: query
        name: path
        schema:
          type: string
      - description: Whether to stream the file.
        in: query
        name: stream
        schema:
          type: boolean
      - description: Whether to force reload.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Get run artifact
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts:
    delete:
      operationId: DeleteRunArtifacts
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Path query param.
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Delete run artifacts
      tags:
      - RunsV1
      x-accepts: application/json
    get:
      operationId: GetRunArtifacts
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the experiement will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Artifact filepath.
        in: query
        name: path
        schema:
          type: string
      - description: Whether to force reload.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Get run artifacts
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/artifacts/tree:
    get:
      operationId: GetRunArtifactsTree
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Path query param.
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ArtifactTree'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run artifacts tree
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/events/{kind}:
    get:
      operationId: GetRunEvents
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: The artifact kind
        in: path
        name: kind
        required: true
        schema:
          enum:
          - model
          - audio
          - video
          - histogram
          - image
          - tensor
          - dataframe
          - chart
          - csv
          - tsv
          - psv
          - ssv
          - metric
          - env
          - html
          - text
          - file
          - dir
          - dockerfile
          - docker_image
          - data
          - coderef
          - table
          - tensorboard
          - curve
          - analysis
          - iteration
          - markdown
          type: string
      - description: Names query param.
        in: query
        name: names
        schema:
          type: string
      - description: Orient query param.
        in: query
        name: orient
        schema:
          type: string
      - description: Force query param.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run events
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/logs:
    get:
      operationId: GetRunLogs
      parameters:
      - in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: last time.
        in: query
        name: last_time
        schema:
          format: date-time
          type: string
      - description: last file.
        in: query
        name: last_file
        schema:
          type: string
      - description: Force query param.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Logs'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run logs
      tags:
      - RunsV1
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/notify:
    post:
      operationId: NotifyRunStatus
      parameters:
      - description: Na,espace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1EntityNotificationBody'
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Notify run status
      tags:
      - RunsV1
      x-codegen-request-body-name: body
      x-contentType: application/json
      x-accepts: application/json
  /streams/v1/{namespace}/{owner}/{project}/runs/{uuid}/resources:
    get:
      operationId: GetRunResources
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project where the run will be assigned
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Uuid identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: Names query param.
        in: query
        name: names
        schema:
          type: string
      - description: Query param flag to tail the values.
        in: query
        name: tail
        schema:
          type: boolean
      - description: Force query param.
        in: query
        name: force
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EventsResponse'
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
          description: An unexpected error response.
      summary: Get run resources events
      tags:
      - RunsV1
      x-accepts: application/json
  /api/v1/catalogs/{owner}/artifacts/{uuid}/upload:
    post:
      operationId: UploadArtifact
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: File path query params.
        in: query
        name: path
        schema:
          type: string
      - description: File path query params.
        in: query
        name: overwrite
        schema:
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploadfile:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - uploadfile
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload artifact to a store
      tags:
      - ArtifactsStoresV1
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/artifacts/{uuid}/upload:
    post:
      operationId: UploadProjectArtifact
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project having access to the store
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: File path query params.
        in: query
        name: path
        schema:
          type: string
      - description: File path query params.
        in: query
        name: overwrite
        schema:
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploadfile:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - uploadfile
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload artifact to a store via project access
      tags:
      - ProjectsV1
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/logs/upload:
    post:
      operationId: UploadRunLogs
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project having access to the store
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: File path query params.
        in: query
        name: path
        schema:
          type: string
      - description: File path query params.
        in: query
        name: overwrite
        schema:
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploadfile:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - uploadfile
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload a logs file to a store via run access
      tags:
      - RunsV1
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v1/{owner}/{project}/runs/{uuid}/artifacts/upload:
    post:
      operationId: UploadRunArtifact
      parameters:
      - description: Owner of the namespace
        in: path
        name: owner
        required: true
        schema:
          type: string
      - description: Project having access to the store
        in: path
        name: project
        required: true
        schema:
          type: string
      - description: Unique integer identifier of the entity
        in: path
        name: uuid
        required: true
        schema:
          type: string
      - description: File path query params.
        in: query
        name: path
        schema:
          type: string
      - description: File path query params.
        in: query
        name: overwrite
        schema:
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                uploadfile:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - uploadfile
        required: true
      responses:
        "200":
          content: {}
          description: A successful response.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No content.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: You don't have permission to access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Resource does not exist.
      summary: Upload an artifact file to a store via run access
      tags:
      - RunsV1
      x-contentType: multipart/form-data
      x-accepts: application/json
components:
  schemas:
    AgentStateResponseAgentState:
      example:
        deleting: '{}'
        apply: '{}'
        stopping: '{}'
        schedules: '{}'
        queued: '{}'
        watchdogs: '{}'
        hooks: '{}'
        tuners: '{}'
        full: true
      properties:
        schedules:
          properties: {}
          title: List of schdules runs
          type: object
        hooks:
          properties: {}
          title: List of hooks runs
          type: object
        watchdogs:
          properties: {}
          title: List of watchdogs runs
          type: object
        tuners:
          properties: {}
          title: List of tuners runs
          type: object
        queued:
          properties: {}
          title: List of queued runs
          type: object
        stopping:
          properties: {}
          title: List of stopping runs
          type: object
        deleting:
          properties: {}
          title: List of deleting runs
          type: object
        apply:
          properties: {}
          title: List of apply runs
          type: object
        full:
          title: A flag to tell the agent that the queues are still full
          type: boolean
      type: object
    DashboardView:
      default: any
      description: |-
        - any: Any view
         - single: Single run dashboard
         - compare: Compare runs dashboard
      enum:
      - any
      - single
      - compare
      title: Dashboard view
      type: string
    SparkDeployMode:
      default: cluster
      enum:
      - cluster
      - client
      - in_cluster_client
      type: string
    protobufAny:
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := ptypes.MarshalAny(foo)
             ...
             foo := &pb.Foo{}
             if err := ptypes.UnmarshalAny(any, foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
      properties:
        type_url:
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
          type: string
        value:
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    protobufNullValue:
      default: NULL_VALUE
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      enum:
      - NULL_VALUE
      type: string
    runtimeError:
      properties:
        error:
          type: string
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1Action:
      example:
        run_patch: '{}'
        hub_ref: hub_ref
        label: label
        many: many
        params:
          key:
            ref: ref
            search:
              offset: 3
              query: query
              limit: 3
              sort: sort
            connection: connection
            to_init: true
            context_only: true
            value: '{}'
      properties:
        hub_ref:
          title: Component name to use, if not provided Polyaxon will check the action
            name isntead
          type: string
        label:
          title: UI label to use for the button, if not provided it will default to
            the component's hub reference
          type: string
        many:
          title: A flag to tell if the action should be applied on a single or multiple
            runs
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        run_patch:
          properties: {}
          title: |-
            Optional a run section to override  the content of the run in the template
            should be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag
          type: object
      title: Action definition
      type: object
    v1Affinity:
      title: Placeholder for Affinity
      type: object
    v1Agent:
      example:
        settings: '{}'
        version_api: '{}'
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        version: version
        content: content
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        namespace: namespace
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        namespace:
          title: Namespace where the agent is deployed
          type: string
        version_api:
          properties: {}
          title: Optional version api
          type: object
        version:
          title: Agent version
          type: string
        content:
          title: Content of the agent config
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        settings:
          properties: {}
          title: Optional settings
          type: object
      title: Agent specification
      type: object
    v1AgentStateResponse:
      example:
        compatible_updates: '{}'
        state:
          deleting: '{}'
          apply: '{}'
          stopping: '{}'
          schedules: '{}'
          queued: '{}'
          watchdogs: '{}'
          hooks: '{}'
          tuners: '{}'
          full: true
      properties:
        status:
          $ref: '#/components/schemas/v1Statuses'
        state:
          $ref: '#/components/schemas/AgentStateResponseAgentState'
        compatible_updates:
          properties: {}
          type: object
      title: Contains the agents (queues/runs) state
      type: object
    v1AgentStatusBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
      title: Request data to create/update agent status
      type: object
    v1ArtifactKind:
      default: model
      description: |-
        - model: Model asset/event
         - audio: Audio asset/event
         - video: Vidio asset/event
         - histogram: Histogram asset/event
         - image: Image asset/event
         - tensor: Tensor asset/event
         - dataframe: Dataframe asset/event
         - chart: plotly/bokeh/vega chart
         - csv: Comma separated values
         - tsv: Tab separated values
         - psv: Pipe separated values
         - ssv: Space separated values
         - metric: Metric asset/event
         - env: Env file
         - html: HTML asset/event
         - text: Text asset/event
         - file: File asset/lineage
         - dir: Dir asset/lineage
         - dockerfile: Dockerfile asset
         - docker_image: Docker image
         - data: Data asset/event
         - coderef: Coderef lineage
         - table: Table asset/event
         - tensorboard: Tensorboard lineage
         - curve: Curve event
         - analysis: Analysis lineage
         - iteration: Iteration lineage
         - markdown: Mardown event
      enum:
      - model
      - audio
      - video
      - histogram
      - image
      - tensor
      - dataframe
      - chart
      - csv
      - tsv
      - psv
      - ssv
      - metric
      - env
      - html
      - text
      - file
      - dir
      - dockerfile
      - docker_image
      - data
      - coderef
      - table
      - tensorboard
      - curve
      - analysis
      - iteration
      - markdown
      title: Artifact kind
      type: string
    v1ArtifactTree:
      example:
        is_done: true
        files:
          key: files
        dirs:
        - dirs
        - dirs
      properties:
        files:
          additionalProperties:
            format: int64
            type: string
          type: object
        dirs:
          items:
            type: string
          type: array
        is_done:
          type: boolean
      title: Artifact tree response
      type: object
    v1ArtifactsMount:
      example:
        paths:
        - paths
        - paths
        name: name
      properties:
        name:
          title: Name of the artifact(connection)
          type: string
        paths:
          items:
            type: string
          title: Paths to mount
          type: array
      title: Artifact mount specification
      type: object
    v1ArtifactsType:
      example:
        files:
        - files
        - files
        dirs:
        - dirs
        - dirs
        workers: 3
      properties:
        files:
          items:
            type: string
          title: Optional files to initialize
          type: array
        dirs:
          items:
            type: string
          title: Optional dirs to initialize
          type: array
        workers:
          format: int32
          title: Optional number of concurrent threads to use
          type: integer
      title: Artifacts type specification
      type: object
    v1Auth:
      example:
        token: token
      properties:
        token:
          title: token hash
          type: string
      title: Auth specification
      type: object
    v1AuthType:
      example:
        password: password
        user: user
      properties:
        user:
          title: Optional user
          type: string
        password:
          title: Optional password
          type: string
      title: Uri type specification
      type: object
    v1Bayes:
      example:
        max_iterations: 8
        container: '{}'
        seed: 9
        metric:
          name: name
        kind: bayes
        num_initial_runs: 6
        utility_function: '{}'
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 6
      properties:
        kind:
          default: bayes
          title: Kind of matrix, should be equal to "bayes"
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        num_initial_runs:
          format: int32
          title: Number of intial random observations to create
          type: integer
        max_iterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        utility_function:
          properties: {}
          title: A utility function to use for the bayesian optimization
          type: object
        metric:
          $ref: '#/components/schemas/v1OptimizationMetric'
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        container:
          title: Placeholder for Container
          type: object
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on Bayesian Optimization
      type: object
    v1BucketConnection:
      example:
        bucket: bucket
      properties:
        bucket:
          title: Bucket
          type: string
      title: Bucket connection schema validation specification
      type: object
    v1Cache:
      example:
        disable: true
        inputs:
        - inputs
        - inputs
        ttl: 0
      properties:
        disable:
          title: Optional flag to disable cache, Cache is enabled by default
          type: boolean
        ttl:
          format: int32
          title: "Optional time to live for the cache before it gets invalidated automatically,\
            \ \nthe TTL is caclculated based on the time the run starts"
          type: integer
        inputs:
          items:
            type: string
          title: Optional Inputs' names to consider for the cache
          type: array
      title: |-
        Cache specification
        Cache is calculated based on inputs state as well as component version if used
      type: object
    v1ClaimConnection:
      example:
        volume_claim: volume_claim
        mount_path: mount_path
        read_only: true
        kind: '{}'
      properties:
        volume_claim:
          title: Claim name
          type: string
        mount_path:
          title: Mount path
          type: string
        read_only:
          title: Read Only
          type: boolean
        kind:
          type: object
      title: Claim connection schema validation specification
      type: object
    v1CleanPodPolicy:
      default: All
      enum:
      - All
      - Running
      - None
      title: CleanPodPolicy
      type: string
    v1Cloning:
      example:
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Optional uuid of the original run
          type: string
        name:
          title: Optional name of the original run
          type: string
        kind:
          $ref: '#/components/schemas/v1CloningKind'
      type: object
    v1CloningKind:
      default: copy
      enum:
      - copy
      - restart
      - cache
      type: string
    v1Compatibility:
      example:
        cli:
          min: min
          latest: latest
        agent:
          min: min
          latest: latest
        ui:
          min: min
          latest: latest
        platform:
          min: min
          latest: latest
      properties:
        cli:
          $ref: '#/components/schemas/v1Version'
        platform:
          $ref: '#/components/schemas/v1Version'
        agent:
          $ref: '#/components/schemas/v1Version'
        ui:
          $ref: '#/components/schemas/v1Version'
      type: object
    v1CompiledOperation:
      example:
        termination:
          max_retries: 4
          ttl: 8
          timeout: 7
        outputs:
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        cache:
          disable: true
          inputs:
          - inputs
          - inputs
          ttl: 0
        kind: kind
        plugins:
          collect_logs: true
          auth: true
          collect_resources: collect_resources
          auto_resume: true
          log_level: log_level
          shm: true
          sync_statuses: true
          collect_artifacts: true
          externalHost: true
          notifications:
          - connections:
            - connections
            - connections
          - connections:
            - connections
            - connections
          docker: true
        inputs:
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        description: description
        skip_on_upstream_skip: true
        run: '{}'
        contexts:
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        matrix: '{}'
        version: 7.2605214
        tags:
        - tags
        - tags
        dependencies:
        - dependencies
        - dependencies
        schedule: '{}'
        presets:
        - presets
        - presets
        name: name
        is_approved: true
        conditions:
        - '{}'
        - '{}'
        actions:
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        hooks:
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        queue: queue
        events:
        - events
        - events
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: Optional component kind, should be equal to 'operation'
          type: string
        name:
          title: Optional component name, should a valid slug
          type: string
        description:
          title: Optional component description
          type: string
        tags:
          items:
            type: string
          title: Optional component tags
          type: array
        presets:
          items:
            type: string
          title: Optional presets to use for running this component
          type: array
        queue:
          title: Optional queue to use for running this component
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        schedule:
          properties: {}
          title: Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)
          type: object
        events:
          items:
            type: string
          title: Optional events section, must be a valid List of Event option (Git/Alert/Webhook/Dataset)
          type: array
        actions:
          items:
            $ref: '#/components/schemas/v1Action'
          title: Optional actions section
          type: array
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        matrix:
          properties: {}
          title: Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)
          type: object
        dependencies:
          items:
            type: string
          title: Optional graph dependencies of this op
          type: array
        trigger:
          $ref: '#/components/schemas/v1TriggerPolicy'
        conditions:
          items:
            properties: {}
            type: object
          title: An optional list of condition to check before starting the run, entities
            should be a valid Condition
          type: array
        skip_on_upstream_skip:
          title: Optional flag to skip this run if upstream was skipped
          type: boolean
        inputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional inputs definition
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        contexts:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        is_approved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
        run:
          properties: {}
          title: 'Run definiton, should be one of run composition: Container/Spark/Flink/Kubeflow/Dask/Dag'
          type: object
      title: CompiledOperation specification
      type: object
    v1Component:
      example:
        termination:
          max_retries: 4
          ttl: 8
          timeout: 7
        outputs:
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        template:
          description: description
          fields:
          - fields
          - fields
          enabled: true
        cache:
          disable: true
          inputs:
          - inputs
          - inputs
          ttl: 0
        kind: kind
        plugins:
          collect_logs: true
          auth: true
          collect_resources: collect_resources
          auto_resume: true
          log_level: log_level
          shm: true
          sync_statuses: true
          collect_artifacts: true
          externalHost: true
          notifications:
          - connections:
            - connections
            - connections
          - connections:
            - connections
            - connections
          docker: true
        inputs:
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        - arg_format: arg_format
          is_flag: true
          name: name
          options:
          - '{}'
          - '{}'
          description: description
          is_list: true
          connection: connection
          delay_validation: true
          to_init: true
          value: '{}'
          iotype: iotype
          is_optional: true
        description: description
        run: '{}'
        version: 7.0483656
        tags:
        - tags
        - tags
        presets:
        - presets
        - presets
        name: name
        is_approved: true
        actions:
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        hooks:
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        queue: queue
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: Optional component kind, should be equal to 'operation'
          type: string
        name:
          title: 'Optional component name, should be a valid fully qualified value:
            name[:version]'
          type: string
        description:
          title: Optional component description
          type: string
        tags:
          items:
            type: string
          title: Optional component tags
          type: array
        presets:
          items:
            type: string
          title: Optional presets to use for running this component
          type: array
        queue:
          title: Optional queue to use for running this component
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        actions:
          items:
            $ref: '#/components/schemas/v1Action'
          title: Optional actions section
          type: array
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        inputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional inputs definition
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/v1IO'
          title: Optional outputs definition
          type: array
        run:
          properties: {}
          title: 'Run definition, should be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag'
          type: object
        template:
          $ref: '#/components/schemas/v1Template'
        is_approved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
      title: Component specification
      type: object
    v1ComponentHub:
      example:
        owner: owner
        settings:
          teams:
          - teams
          - teams
        role: role
        bookmarked: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 0
        readme: readme
        uuid: uuid
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_public: true
      properties:
        uuid:
          title: UUID
          type: string
        owner:
          title: Owner/namespace where the component hub was created
          type: string
        name:
          title: 'Optional component name, should be a valid fully qualified value:
            name[:version]'
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        is_public:
          title: Optional flag to tell if this project is public
          type: boolean
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        live_state:
          format: int32
          title: Current live state
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        readme:
          title: Markdown description/readme
          type: string
        settings:
          $ref: '#/components/schemas/v1ComponentHubSettings'
        role:
          title: Current user's role in this (org/teams)/project
          type: string
      title: component hub specification
      type: object
    v1ComponentHubSettings:
      example:
        teams:
        - teams
        - teams
      properties:
        teams:
          items:
            type: string
          title: Authorized teams
          type: array
      title: Hub Settings specification
      type: object
    v1ComponentVersion:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        stage_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 0
        uuid: uuid
        content: content
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: 'Optional component name, should be a valid fully qualified value:
            name[:version]'
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        stage:
          $ref: '#/components/schemas/v1Stages'
        stage_conditions:
          items:
            $ref: '#/components/schemas/v1StageCondition'
          title: The status conditions timeline
          type: array
        content:
          title: The Component body content
          type: string
      title: component hub specification
      type: object
    v1ConnectionKind:
      default: host_path
      enum:
      - host_path
      - volume_claim
      - gcs
      - s3
      - wasb
      - registry
      - git
      - aws
      - gcp
      - azure
      - mysql
      - postgres
      - oracle
      - vertica
      - sqlite
      - mssql
      - redis
      - presto
      - mongo
      - cassandra
      - ftp
      - grpc
      - hdfs
      - http
      - pig_cli
      - hive_cli
      - hive_metastore
      - hive_server2
      - jdbc
      - jenkins
      - samba
      - snowflake
      - ssh
      - cloudant
      - databricks
      - segment
      - slack
      - discord
      - mattermost
      - pagerduty
      - hipchat
      - webhook
      - custom
      title: Connection kinds
      type: string
    v1ConnectionResponse:
      example:
        agent: agent
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        agent:
          title: Agent
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        live_state:
          format: int32
          title: Current live state
          type: integer
        kind:
          $ref: '#/components/schemas/v1ConnectionKind'
      title: Connection specification
      type: object
    v1ConnectionSchema:
      example:
        git_connection:
          flags:
          - flags
          - flags
          url: url
          revision: true
        bucket_connection:
          bucket: bucket
        host_path_connection:
          host_path: host_path
          mount_path: mount_path
          read_only: true
          kind: '{}'
        claim_connection:
          volume_claim: volume_claim
          mount_path: mount_path
          read_only: true
          kind: '{}'
        host_connection:
          insecure: true
          url: url
      properties:
        bucket_connection:
          $ref: '#/components/schemas/v1BucketConnection'
        host_path_connection:
          $ref: '#/components/schemas/v1HostPathConnection'
        claim_connection:
          $ref: '#/components/schemas/v1ClaimConnection'
        host_connection:
          $ref: '#/components/schemas/v1HostConnection'
        git_connection:
          $ref: '#/components/schemas/v1GitConnection'
      type: object
    v1ConnectionType:
      example:
        schema: '{}'
        name: name
        description: description
        secret:
          mount_path: mount_path
          name: name
          default_mode: 5
          items:
          - items
          - items
        config_map:
          mount_path: mount_path
          name: name
          default_mode: 5
          items:
          - items
          - items
        tags: tags
      properties:
        name:
          title: Connection name
          type: string
        description:
          title: Optional connection description
          type: string
        tags:
          title: Optional connection tags
          type: string
        kind:
          $ref: '#/components/schemas/v1ConnectionKind'
        schema:
          properties: {}
          title: The connection schema should be a valid ConnectionSchema
          type: object
        secret:
          $ref: '#/components/schemas/v1K8sResourceSchema'
        config_map:
          $ref: '#/components/schemas/v1K8sResourceSchema'
      type: object
    v1Container:
      title: Placeholder for Container
      type: object
    v1Credentials:
      properties:
        username:
          title: User username or email
          type: string
        password:
          title: User password
          type: string
      title: Login
      type: object
    v1CronSchedule:
      example:
        cron: cron
        end_at: 2000-01-23T04:56:07.000+00:00
        max_runs: 9
        depends_on_past: true
        kind: cron
        start_at: 2000-01-23T04:56:07.000+00:00
      properties:
        kind:
          default: cron
          title: Kind of schedule, should be equal to "cron"
          type: string
        start_at:
          format: date-time
          title: Whan to start this cron schedule
          type: string
        end_at:
          format: date-time
          title: Whan to end this cron schedule
          type: string
        max_runs:
          format: int32
          title: Limit to stop executing this schedule
          type: integer
        cron:
          title: Cron definition, e.g. 0 1 * * *
          type: string
        depends_on_past:
          title: A flag to set a dependency on past executions
          type: boolean
      title: Cron schedule specification
      type: object
    v1Dag:
      example:
        components:
        - termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          outputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          kind: kind
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          inputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          description: description
          run: '{}'
          version: 7.0483656
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
        - termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          outputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          kind: kind
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          inputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          description: description
          run: '{}'
          version: 7.0483656
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        operations:
        - template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          description: description
          hub_ref: hub_ref
          skip_on_upstream_skip: true
          matrix: '{}'
          run_patch: '{}'
          dag_ref: dag_ref
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          events:
          - events
          - events
          termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          path_ref: path_ref
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          url_ref: url_ref
          kind: kind
          is_preset: true
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
          version: 6.519181
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: '{}'
          component:
            termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            outputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            kind: kind
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            inputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            description: description
            run: '{}'
            version: 7.0483656
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          conditions:
          - conditions
          - conditions
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
        - template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          description: description
          hub_ref: hub_ref
          skip_on_upstream_skip: true
          matrix: '{}'
          run_patch: '{}'
          dag_ref: dag_ref
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          events:
          - events
          - events
          termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          path_ref: path_ref
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          url_ref: url_ref
          kind: kind
          is_preset: true
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
          version: 6.519181
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: '{}'
          component:
            termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            outputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            kind: kind
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            inputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            description: description
            run: '{}'
            version: 7.0483656
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          conditions:
          - conditions
          - conditions
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
        kind: dag
        volumes:
        - null
        - null
        early_stopping:
        - '{}'
        - '{}'
        connections:
        - connections
        - connections
        concurrency: 5
      properties:
        kind:
          default: dag
          title: Optional component kind, should be equal to 'dag'
          type: string
        operations:
          items:
            $ref: '#/components/schemas/v1Operation'
          title: Ops used in the graph
          type: array
        components:
          items:
            $ref: '#/components/schemas/v1Component'
          title: Optional component refrences
          type: array
        concurrency:
          format: int32
          title: Optional component description
          type: integer
        early_stopping:
          items:
            properties: {}
            type: object
          title: Optional component tags
          type: array
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
      title: Dag specificaiton
      type: object
    v1DagRef:
      example:
        kind: dag_ref
        name: name
      properties:
        kind:
          default: dag_ref
          title: Kind of reference, should be equal to "dag_ref"
          type: string
        name:
          title: Value
          type: string
      title: Dag reference specification
      type: object
    v1Dashboard:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        spec: '{}'
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        view:
          $ref: '#/components/schemas/DashboardView'
        spec:
          properties: {}
          title: Optional dashboard specification
          type: object
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Dashboard specification
      type: object
    v1Dask:
      example:
        adapt_interval: adapt_interval
        container: '{}'
        init:
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        sidecars:
        - null
        - null
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        kind: dask
        volumes:
        - null
        - null
        threads: 0
        scale: 6
        adapt_max: 1
        adapt_min: 4
        connections:
        - connections
        - connections
      properties:
        kind:
          default: dask
          title: Optional component kind, should be equal to 'Dask'
          type: string
        threads:
          format: int32
          title: Number of threads
          type: integer
        scale:
          format: int32
          title: Number of workers
          type: integer
        adapt_min:
          format: int32
          title: Adaptive config min workers
          type: integer
        adapt_max:
          format: int32
          title: Adaptive config max workers
          type: integer
        adapt_interval:
          title: Adaptive config interval
          type: string
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections/containers section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Dask specification
      type: object
    v1DateTimeSchedule:
      example:
        kind: datetime
        start_at: 2000-01-23T04:56:07.000+00:00
      properties:
        kind:
          default: datetime
          title: Kind of schedule, should be equal to "datetime"
          type: string
        start_at:
          format: date-time
          title: Whan to start this cron schedule
          type: string
      title: DateTime schedule specification
      type: object
    v1DiffStoppingPolicy:
      description: |-
        Early stopping with diff factor stopping, this policy computes checks runs against the best run
        and stops those whose performance is worse than the best by the factor defined by the user.
      example:
        min_samples: 7
        kind: kind
        min_interval: 2
        percent: 5.962134
        evaluation_interval: 5
      properties:
        kind:
          title: Kind of this stopping policy, should be equal to "average"
          type: string
        percent:
          format: float
          title: The diff factor, if not given than a zero tolerance policy is applied
          type: number
        evaluation_interval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        min_interval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        min_samples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
      type: object
    v1DockerfileType:
      example:
        image: image
        path:
          key: path
        uid: 7
        gid: 0
        filename: filename
        lang_env: lang_env
        workdir: workdir
        shell: shell
        run:
        - run
        - run
        copy:
          key: copy
        env:
          key: env
        workdir_path: workdir_path
      properties:
        image:
          title: Docker image to use as a base
          type: string
        env:
          additionalProperties:
            type: string
          title: An optional list of tuples(key, value) for defining env vars, translate
            to an ENV statements
          type: object
        path:
          additionalProperties:
            type: string
          title: An optional list of tuples for exporting paths, translate to a PATH
            statements
          type: object
        copy:
          additionalProperties:
            type: string
          title: An optional list of tuples for copying paths, translate to a COPY
            statements
          type: object
        run:
          items:
            type: string
          title: An optional list of strubg for executing Run commands, translate
            to a RUN statements
          type: array
        lang_env:
          title: An optional string defining a language, e.g. en_US.UTF-8
          type: string
        uid:
          format: int32
          title: A uid to use when creating the docker image
          type: integer
        gid:
          format: int32
          title: A gid to use when creating the docker image
          type: integer
        filename:
          title: A filename to give to the generated dockerfile
          type: string
        workdir:
          title: A work dir to copy code to, default to /code
          type: string
        workdir_path:
          title: An optional workdir path
          type: string
        shell:
          title: An optional shell type, defaults to "/bin/bash"
          type: string
      title: Dockerfile type specification
      type: object
    v1EarlyStopping:
      example:
        median:
          min_samples: 1
          kind: median
          min_interval: 6
          evaluation_interval: 0
        metric:
          metric: metric
          kind: metric_early_stopping
          value: value
          policy: '{}'
        failure:
          kind: failure_early_stopping
          percent: 7
        diff:
          min_samples: 7
          kind: kind
          min_interval: 2
          percent: 5.962134
          evaluation_interval: 5
        truncation:
          min_samples: 4
          kind: truncation
          min_interval: 2
          percent: 9
          evaluation_interval: 3
          include_succeeded: true
      properties:
        median:
          $ref: '#/components/schemas/v1MedianStoppingPolicy'
        diff:
          $ref: '#/components/schemas/v1DiffStoppingPolicy'
        truncation:
          $ref: '#/components/schemas/v1TruncationStoppingPolicy'
        metric:
          $ref: '#/components/schemas/v1MetricEarlyStopping'
        failure:
          $ref: '#/components/schemas/v1FailureEarlyStopping'
      title: All Schemas message
      type: object
    v1EntitiesTags:
      properties:
        uuids:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
      type: object
    v1EntityNotificationBody:
      properties:
        namespace:
          title: Na,espace
          type: string
        owner:
          title: Owner of the namespace
          type: string
        project:
          title: Project where the run will be assigned
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        name:
          title: Optional name of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
        connections:
          items:
            type: string
          title: Connections to notify
          type: array
      title: Request data to create/update entity status
      type: object
    v1EntityStageBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        entity:
          title: Entity namespace
          type: string
        name:
          title: Name of the version to apply the stage to
          type: string
        condition:
          $ref: '#/components/schemas/v1StageCondition'
      title: Request data to create/update entity stage
      type: object
    v1EntityStatusBodyRequest:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        project:
          title: Project where the run will be assigned
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
        condition:
          $ref: '#/components/schemas/v1StatusCondition'
      title: Request data to create/update entity status
      type: object
    v1Environment:
      example:
        service_account_name: service_account_name
        image_pull_secrets:
        - image_pull_secrets
        - image_pull_secrets
        host_aliases:
        - null
        - null
        node_name: node_name
        annotations:
          key: annotations
        priority: 3
        labels:
          key: labels
        priority_class_name: priority_class_name
        node_selector:
          key: node_selector
        host_network: true
        tolerations:
        - null
        - null
        dns_policy: dns_policy
        restart_policy: restart_policy
        dns_config: '{}'
        scheduler_name: scheduler_name
        security_context: '{}'
        affinity: '{}'
        hostPID: hostPID
      properties:
        labels:
          additionalProperties:
            type: string
          title: Optional Metadata labels to pass to the k8s
          type: object
        annotations:
          additionalProperties:
            type: string
          title: Optional Metadata annotations to pass to the k8s
          type: object
        node_selector:
          additionalProperties:
            type: string
          title: |-
            Optional NodeSelector is a selector which must be true for the pod to fit on a node.
            Selector which must match a node's labels for the pod to be scheduled on that node.
            More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          type: object
        affinity:
          title: Placeholder for Affinity
          type: object
        tolerations:
          description: Optional Tolerations to apply.
          items:
            $ref: '#/components/schemas/v1Toleration'
          type: array
        node_name:
          description: |-
            Optional NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
            the scheduler simply schedules this pod onto that node, assuming that it fits resource
            requirements.
          type: string
        service_account_name:
          title: Optional service account name to use for this run
          type: string
        host_aliases:
          description: Optional HostAliases is an optional list of hosts and IPs that
            will be injected into the pod spec.
          items:
            $ref: '#/components/schemas/v1HostAlias'
          type: array
        security_context:
          title: Placeholder for PodSecurityContext
          type: object
        image_pull_secrets:
          items:
            type: string
          title: |-
            Optional image pull secrets to use for this run
            ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
            in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets
            can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.
            More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
          type: array
        host_network:
          description: Host networking requested for this workflow pod. Default to
            false.
          type: boolean
        hostPID:
          description: Use the host's pid namespace. Default to false.
          type: string
        dns_policy:
          description: |-
            Set DNS policy for the pod.
            Defaults to "ClusterFirst".
            Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
            DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
            To have DNS options set along with hostNetwork, you have to specify DNS policy
            explicitly to 'ClusterFirstWithHostNet'.
          type: string
        dns_config:
          title: Placeholder for PodDNSConfig
          type: object
        scheduler_name:
          title: |-
            If specified, the pod will be dispatched by specified scheduler.
            Or it will be dispatched by workflow scope scheduler if specified.
            If neither specified, the pod will be dispatched by default scheduler.
            +optional
          type: string
        priority_class_name:
          description: |-
            If specified, indicates the pod's priority. "system-node-critical" and
            "system-cluster-critical" are two special keywords which indicate the
            highest priorities with the former being the highest priority. Any other
            name must be defined by creating a PriorityClass object with that name.
            If not specified, the pod priority will be default or zero if there is no
            default.
          type: string
        priority:
          description: |-
            The priority value. Various system components use this field to find the
            priority of the pod. When Priority Admission Controller is enabled, it
            prevents users from setting this field. The admission controller populates
            this field from PriorityClassName.
            The higher the value, the higher the priority.
          format: int32
          type: integer
        restart_policy:
          title: A valid restart policy
          type: string
      title: Environment specification
      type: object
    v1Event:
      example:
        image:
          path: path
          colorspace: 3
          width: 4
          height: 8
        curve:
          annotation: annotation
          x:
          - 1.8268702
          - 1.8268702
          y:
          - 3.5026577
          - 3.5026577
        video:
          path: path
          content_type: content_type
          colorspace: 9
          width: 8
          height: 4
        histogram:
          counts:
          - 2.9409642974827896
          - 2.9409642974827896
          values:
          - 0.43431398824148815
          - 0.43431398824148815
        artifact:
          path: path
        metric: 6.0738983
        step: 4
        html: html
        model:
          path: path
          framework: framework
          spec: '{}'
        audio:
          num_channels: 8
          path: path
          length_frames: 6
          sample_rate: 1.7325933
          content_type: content_type
        text: text
        dataframe:
          path: path
          content_type: content_type
        chart:
          figure: '{}'
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          title: Optional time when the entity was created
          type: string
        step:
          description: Global step of the event.
          format: int32
          type: integer
        metric:
          format: float
          type: number
        image:
          $ref: '#/components/schemas/v1EventImage'
        histogram:
          $ref: '#/components/schemas/v1EventHistogram'
        audio:
          $ref: '#/components/schemas/v1EventAudio'
        video:
          $ref: '#/components/schemas/v1EventVideo'
        html:
          type: string
        text:
          type: string
        chart:
          $ref: '#/components/schemas/v1EventChart'
        model:
          $ref: '#/components/schemas/v1EventModel'
        artifact:
          $ref: '#/components/schemas/v1EventArtifact'
        dataframe:
          $ref: '#/components/schemas/v1EventDataframe'
        curve:
          $ref: '#/components/schemas/v1EventCurve'
      title: Event spec definition
      type: object
    v1EventArtifact:
      example:
        path: path
      properties:
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
        path:
          title: Filepath
          type: string
      title: Artifact spec definition
      type: object
    v1EventAudio:
      example:
        num_channels: 8
        path: path
        length_frames: 6
        sample_rate: 1.7325933
        content_type: content_type
      properties:
        sample_rate:
          description: Sample rate of the audio in Hz.
          format: float
          type: number
        num_channels:
          description: Number of channels of audio.
          format: int32
          type: integer
        length_frames:
          description: Length of the audio in frames (samples per channel).
          format: int32
          type: integer
        content_type:
          title: Content type of the audio
          type: string
        path:
          title: / Filepath
          type: string
      title: Audio spec definition
      type: object
    v1EventChart:
      example:
        figure: '{}'
      properties:
        kind:
          $ref: '#/components/schemas/v1EventChartKind'
        figure:
          properties: {}
          title: Figure json object
          type: object
      title: Chart spec definition
      type: object
    v1EventChartKind:
      default: plotly
      description: |-
        - plotly: Plotly chart
         - bokeh: Bokeh chart
         - vega: Vega chart
      enum:
      - plotly
      - bokeh
      - vega
      title: Chart kind
      type: string
    v1EventCurve:
      example:
        annotation: annotation
        x:
        - 1.8268702
        - 1.8268702
        y:
        - 3.5026577
        - 3.5026577
      properties:
        kind:
          $ref: '#/components/schemas/v1EventCurveKind'
        x:
          items:
            format: float
            type: number
          title: X
          type: array
        y:
          items:
            format: float
            type: number
          title: "Y"
          type: array
        annotation:
          title: Annotation
          type: string
      title: Custom Curve spec definition
      type: object
    v1EventCurveKind:
      default: roc
      description: |-
        - roc: ROC curve
         - pr: Precision Recall curve
         - custom: Custom curve
      enum:
      - roc
      - pr
      - custom
      title: Curve kind
      type: string
    v1EventDataframe:
      example:
        path: path
        content_type: content_type
      properties:
        path:
          title: Filepath
          type: string
        content_type:
          title: Format
          type: string
      title: Dataframe spec definition
      type: object
    v1EventHistogram:
      example:
        counts:
        - 2.9409642974827896
        - 2.9409642974827896
        values:
        - 0.43431398824148815
        - 0.43431398824148815
      properties:
        values:
          items:
            format: double
            type: number
          type: array
        counts:
          items:
            format: double
            type: number
          type: array
      title: Histogram spec definition
      type: object
    v1EventImage:
      example:
        path: path
        colorspace: 3
        width: 4
        height: 8
      properties:
        height:
          description: Height of the image.
          format: int32
          type: integer
        width:
          description: Width of the image.
          format: int32
          type: integer
        colorspace:
          format: int32
          title: |-
            Valid colorspace values are
              1 - grayscale
              2 - grayscale + alpha
              3 - RGB
              4 - RGBA
              5 - DIGITAL_YUV
              6 - BGRA
          type: integer
        path:
          title: Filepath
          type: string
      title: Image spec definition
      type: object
    v1EventModel:
      example:
        path: path
        framework: framework
        spec: '{}'
      properties:
        framework:
          title: Model framwork
          type: string
        path:
          title: Filepath
          type: string
        spec:
          properties: {}
          title: Model spec (a dictionnary defnining the requirement for the model)
          type: object
      title: Model spec definition
      type: object
    v1EventType:
      example:
        name: name
      properties:
        name:
          title: Name of the event
          type: string
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
      title: Event type specification
      type: object
    v1EventVideo:
      example:
        path: path
        content_type: content_type
        colorspace: 9
        width: 8
        height: 4
      properties:
        height:
          description: Height of the video.
          format: int32
          type: integer
        width:
          description: Width of the video.
          format: int32
          type: integer
        colorspace:
          format: int32
          title: |-
            Valid colorspace values are
              1 - grayscale
              2 - grayscale + alpha
              3 - RGB
              4 - RGBA
              5 - DIGITAL_YUV
              6 - BGRA
          type: integer
        path:
          title: Filepath
          type: string
        content_type:
          title: Content type of the video
          type: string
      title: Video spec definition
      type: object
    v1EventsResponse:
      example:
        data:
        - '{}'
        - '{}'
      properties:
        data:
          items:
            properties: {}
            type: object
          title: Events data
          type: array
      title: Events response definition
      type: object
    v1FailureEarlyStopping:
      description: |-
        FailureEarlyStoppingSchema specification
        Early stopping based on failure config.
        this policy stops based on a percentage of
        failed runs at every evaluation.
      example:
        kind: failure_early_stopping
        percent: 7
      properties:
        kind:
          default: failure_early_stopping
          title: Kind of this metric early stopping policy, should be equal to "failure_early_stopping"
          type: string
        percent:
          description: |-
            The percentage of failed runs, at each evaluation interval.
            e.g. 1 - 99.
          format: int32
          type: integer
      type: object
    v1Flink:
      example:
        kind: flink
        spec: '{}'
      properties:
        kind:
          default: flink
          title: Kind of runtime, should be equal to "flink"
          type: string
        spec:
          properties: {}
          title: Flink specification
          type: object
      title: Flink specification
      type: object
    v1GcsType:
      example:
        bucket: bucket
        blob: blob
      properties:
        bucket:
          title: Optional container
          type: string
        blob:
          title: Optional storage_account
          type: string
      title: Wasb type specification
      type: object
    v1GitConnection:
      example:
        flags:
        - flags
        - flags
        url: url
        revision: true
      properties:
        url:
          title: Url
          type: string
        revision:
          title: revision
          type: boolean
        flags:
          items:
            type: string
          title: Addional command flag
          type: array
      title: Git connection schema validation connection
      type: object
    v1GitType:
      example:
        flags:
        - flags
        - flags
        url: url
        revision: true
      properties:
        url:
          title: Optional Url
          type: string
        revision:
          title: Optional revision
          type: boolean
        flags:
          items:
            type: string
          title: Addional command flag
          type: array
      title: Git type specification, url or a connection is required
      type: object
    v1GridSearch:
      example:
        seed: 7
        kind: grid
        num_runs: 6
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 1
      properties:
        kind:
          default: grid
          title: Kind of matrix, should be equal to "grid"
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        num_runs:
          format: int32
          title: Number of runs to generate and search
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on grid/cartesian product generated search space
      type: object
    v1Hook:
      example:
        run_patch: '{}'
        hub_ref: hub_ref
        connection: connection
        params:
          key:
            ref: ref
            search:
              offset: 3
              query: query
              limit: 3
              sort: sort
            connection: connection
            to_init: true
            context_only: true
            value: '{}'
      properties:
        hub_ref:
          title: Component name to use, if not provided Polyaxon will check the action
            name isntead
          type: string
        trigger:
          $ref: '#/components/schemas/v1Statuses'
        connection:
          title: Connection to use for this hook
          type: string
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        run_patch:
          properties: {}
          title: Optional a run section to override  the content of the run in the
            template
          type: object
      title: Hook definition
      type: object
    v1HostAlias:
      title: Placeholder for HostAlias
      type: object
    v1HostConnection:
      example:
        insecure: true
        url: url
      properties:
        url:
          title: Url
          type: string
        insecure:
          title: insecure
          type: boolean
      title: Host connection schema validation connection
      type: object
    v1HostPathConnection:
      example:
        host_path: host_path
        mount_path: mount_path
        read_only: true
        kind: '{}'
      properties:
        host_path:
          title: host path
          type: string
        mount_path:
          title: Mount path
          type: string
        read_only:
          title: Read Only
          type: boolean
        kind:
          type: object
      title: Host path connection schema validation specification
      type: object
    v1HpChoice:
      example:
        kind: choice
        value: '{}'
      properties:
        kind:
          default: choice
          title: Kind of hp, should be equal to "choice"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Choice specification
      type: object
    v1HpGeomSpace:
      example:
        kind: geomspace
        value: '{}'
      properties:
        kind:
          default: geomspace
          title: Kind of hp, should be equal to "geomspace"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Geom Space specification
      type: object
    v1HpLinSpace:
      example:
        kind: linspace
        value: '{}'
      properties:
        kind:
          default: linspace
          title: Kind of hp, should be equal to "linspace"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Linear Space specification
      type: object
    v1HpLogNormal:
      example:
        kind: lognormal
        value: '{}'
      properties:
        kind:
          default: lognormal
          title: Kind of hp, should be equal to "lognormal"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Normal Dist specification
      type: object
    v1HpLogSpace:
      example:
        kind: logspace
        value: '{}'
      properties:
        kind:
          default: logspace
          title: Kind of hp, should be equal to "logspace"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Space specification
      type: object
    v1HpLogUniform:
      example:
        kind: loguniform
        value: '{}'
      properties:
        kind:
          default: loguniform
          title: Kind of hp, should be equal to "loguniform"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Log Uniform Dist specification
      type: object
    v1HpNormal:
      example:
        kind: normal
        value: '{}'
      properties:
        kind:
          default: normal
          title: Kind of hp, should be equal to "normal"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Normal Dist specification
      type: object
    v1HpPChoice:
      example:
        kind: pchoice
        value: '{}'
      properties:
        kind:
          default: pchoice
          title: Kind of hp, should be equal to "pchoice"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Probabilistic Choice specification
      type: object
    v1HpParams:
      example:
        normal:
          kind: normal
          value: '{}'
        lognormal:
          kind: lognormal
          value: '{}'
        pchoice:
          kind: pchoice
          value: '{}'
        range:
          kind: range
          value: '{}'
        quniform:
          kind: quniform
          value: '{}'
        qlognormal:
          kind: qlognormal
          value: '{}'
        uniform:
          kind: uniform
          value: '{}'
        geomspace:
          kind: geomspace
          value: '{}'
        loguniform:
          kind: loguniform
          value: '{}'
        qloguniform:
          kind: qloguniform
          value: '{}'
        choice:
          kind: choice
          value: '{}'
        logspace:
          kind: logspace
          value: '{}'
        linspace:
          kind: linspace
          value: '{}'
        qnormal:
          kind: qnormal
          value: '{}'
      properties:
        choice:
          $ref: '#/components/schemas/v1HpChoice'
        pchoice:
          $ref: '#/components/schemas/v1HpPChoice'
        range:
          $ref: '#/components/schemas/v1HpRange'
        linspace:
          $ref: '#/components/schemas/v1HpLinSpace'
        logspace:
          $ref: '#/components/schemas/v1HpLogSpace'
        geomspace:
          $ref: '#/components/schemas/v1HpGeomSpace'
        uniform:
          $ref: '#/components/schemas/v1HpUniform'
        quniform:
          $ref: '#/components/schemas/v1HpQUniform'
        loguniform:
          $ref: '#/components/schemas/v1HpLogUniform'
        qloguniform:
          $ref: '#/components/schemas/v1HpQLogUniform'
        normal:
          $ref: '#/components/schemas/v1HpNormal'
        qnormal:
          $ref: '#/components/schemas/v1HpQNormal'
        lognormal:
          $ref: '#/components/schemas/v1HpLogNormal'
        qlognormal:
          $ref: '#/components/schemas/v1HpQLogNormal'
      title: Hp Matrix specification
      type: object
    v1HpQLogNormal:
      example:
        kind: qlognormal
        value: '{}'
      properties:
        kind:
          default: qlognormal
          title: Kind of hp, should be equal to "qlognormal"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Log Normal Dist specification
      type: object
    v1HpQLogUniform:
      example:
        kind: qloguniform
        value: '{}'
      properties:
        kind:
          default: qloguniform
          title: Kind of hp, should be equal to "qloguniform"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Log Uniform Dist specification
      type: object
    v1HpQNormal:
      example:
        kind: qnormal
        value: '{}'
      properties:
        kind:
          default: qnormal
          title: Kind of hp, should be equal to "qnormal"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Normal Dist specification
      type: object
    v1HpQUniform:
      example:
        kind: quniform
        value: '{}'
      properties:
        kind:
          default: quniform
          title: Kind of hp, should be equal to "quniform"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Quantized Uniform Dist specification
      type: object
    v1HpRange:
      example:
        kind: range
        value: '{}'
      properties:
        kind:
          default: range
          title: Kind of hp, should be equal to "range"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Range specification
      type: object
    v1HpUniform:
      example:
        kind: uniform
        value: '{}'
      properties:
        kind:
          default: uniform
          title: Kind of hp, should be equal to "uniform"
          type: string
        value:
          properties: {}
          title: Value
          type: object
      title: HP Uniform Dist specification
      type: object
    v1HubRef:
      example:
        kind: hub_ref
        name: name
      properties:
        kind:
          default: hub_ref
          title: Kind of reference, should be equal to "hub_ref"
          type: string
        name:
          title: Value
          type: string
      title: Hub reference specification
      type: object
    v1Hyperband:
      example:
        max_iterations: 4
        resume: true
        container: '{}'
        eta: 5
        seed: 9
        resource:
          name: name
        metric:
          name: name
        kind: hyperband
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 9
      properties:
        kind:
          default: hyperband
          title: Kind of matrix, should be equal to "hyperband"
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        max_iterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        eta:
          format: int32
          title: Eta
          type: integer
        resource:
          $ref: '#/components/schemas/v1OptimizationResource'
        metric:
          $ref: '#/components/schemas/v1OptimizationMetric'
        resume:
          title: A flag to resume or restart the selected runs
          type: boolean
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        container:
          title: Placeholder for Container
          type: object
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on hyperband
      type: object
    v1Hyperopt:
      example:
        max_iterations: 6
        container: '{}'
        seed: 1
        kind: hyperopt
        num_runs: 3
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 2
      properties:
        kind:
          default: hyperopt
          title: Kind of matrix, should be equal to "hyperopt"
          type: string
        algorithm:
          $ref: '#/components/schemas/v1HyperoptAlgorithms'
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        num_runs:
          format: int32
          title: Number of runs to generate and search
          type: integer
        max_iterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        container:
          title: Placeholder for Container
          type: object
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on hyperopt
      type: object
    v1HyperoptAlgorithms:
      default: tpe
      description: |-
        - tpe: tpe algorithm
         - rand: random algorithm
         - anneal: anneal algorithm
      enum:
      - tpe
      - rand
      - anneal
      title: Hyperopt algorithms enum
      type: string
    v1IO:
      example:
        arg_format: arg_format
        is_flag: true
        name: name
        options:
        - '{}'
        - '{}'
        description: description
        is_list: true
        connection: connection
        delay_validation: true
        to_init: true
        value: '{}'
        iotype: iotype
        is_optional: true
      properties:
        name:
          title: Name for the input/output
          type: string
        description:
          title: Description for the input/output
          type: string
        iotype:
          title: The type of the input/output
          type: string
        value:
          properties: {}
          title: The value of the input/output should be compatible with the type
          type: object
        is_optional:
          title: A flag to tell if this input/output is optional
          type: boolean
        is_list:
          title: A flag to tell if this input/output is list
          type: boolean
        is_flag:
          title: A flag to tell if this input/output is flag, only valid for bool
            type
          type: boolean
        arg_format:
          title: An optional argFromat of the input/output to be used instead of passing
            the value as is
          type: string
        delay_validation:
          title: A flag to tell if param validation for this input/output should be
            delayed
          type: boolean
        options:
          items:
            properties: {}
            type: object
          title: An optional field to provide possible values for validation
          type: array
        connection:
          title: A flag to signal to Polyaxon that this io is used with a connection
          type: string
        to_init:
          title: A flag to signal to Polyaxon that this io must be tranformed to an
            init container
          type: boolean
      title: Inputs/Outputs specification
      type: object
    v1Init:
      example:
        container: '{}'
        path: path
        git:
          flags:
          - flags
          - flags
          url: url
          revision: true
        dockerfile:
          image: image
          path:
            key: path
          uid: 7
          gid: 0
          filename: filename
          lang_env: lang_env
          workdir: workdir
          shell: shell
          run:
          - run
          - run
          copy:
            key: copy
          env:
            key: env
          workdir_path: workdir_path
        connection: connection
        artifacts:
          files:
          - files
          - files
          dirs:
          - dirs
          - dirs
          workers: 3
      properties:
        artifacts:
          $ref: '#/components/schemas/v1ArtifactsType'
        git:
          $ref: '#/components/schemas/v1GitType'
        dockerfile:
          $ref: '#/components/schemas/v1DockerfileType'
        connection:
          title: Optional, connection to use with this initializer
          type: string
        path:
          title: Optional context path, the path to mount to main the container
          type: string
        container:
          title: Placeholder for Container
          type: object
      title: Artifacts initializer specification
      type: object
    v1Installation:
      example:
        auth:
        - auth
        - auth
        hmac: hmac
        host: host
        dist: dist
        version: version
        key: key
      properties:
        key:
          type: string
        version:
          type: string
        dist:
          type: string
        host:
          type: string
        hmac:
          type: string
        auth:
          items:
            type: string
          type: array
      type: object
    v1IntervalSchedule:
      example:
        end_at: 2000-01-23T04:56:07.000+00:00
        max_runs: 0
        depends_on_past: true
        kind: interval
        start_at: 2000-01-23T04:56:07.000+00:00
        frequency: 9
      properties:
        kind:
          default: interval
          title: Kind of schedule, should be equal to "interval"
          type: string
        start_at:
          format: date-time
          title: When to start this interval schedule
          type: string
        end_at:
          format: date-time
          title: Whan to end this interval schedule
          type: string
        max_runs:
          format: int32
          title: Limit to stop executing this schedule
          type: integer
        frequency:
          format: int32
          title: Frequency (timedelta) at which to execute the runs
          type: integer
        depends_on_past:
          title: A flag to set a dependency on past executions
          type: boolean
      title: Interval schedule specification
      type: object
    v1IoCond:
      example:
        param: param
        kind: kind
        trigger: trigger
      properties:
        kind:
          title: Kind of condition, should be equal to "io"
          type: string
        param:
          title: 'Param to condition on: e.g. builds.outputs.param1'
          type: string
        trigger:
          title: 'Trigger to check, trigger condition must conform to the iotype,
            e.g. value condition: v1|v2|V3'
          type: string
      title: Input condition specification
      type: object
    v1Iterative:
      example:
        max_iterations: 6
        container: '{}'
        seed: 6
        kind: iterative
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 5
      properties:
        kind:
          default: iterative
          title: Kind of matrix, should be equal to "iterative"
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        max_iterations:
          format: int32
          title: Maximim number of iteration to produce new observations
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        container:
          title: Placeholder for Container
          type: object
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on a custom iterative algorithm (suggestions -> mapping
        -> reduce -> repeat)
      type: object
    v1Job:
      example:
        container: '{}'
        init:
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        sidecars:
        - null
        - null
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        kind: job
        volumes:
        - null
        - null
        connections:
        - connections
        - connections
      properties:
        kind:
          default: job
          title: Optional component kind, should be equal to 'job'
          type: string
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections/containers section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Job specification
      type: object
    v1K8sResourceSchema:
      example:
        mount_path: mount_path
        name: name
        default_mode: 5
        items:
        - items
        - items
      properties:
        name:
          type: string
        mount_path:
          type: string
        items:
          items:
            type: string
          type: array
        default_mode:
          format: int32
          type: integer
      title: K8S resource schema validation
      type: object
    v1K8sResourceType:
      example:
        schema:
          mount_path: mount_path
          name: name
          default_mode: 5
          items:
          - items
          - items
        name: name
        is_requested: true
      properties:
        name:
          title: Name of the resource
          type: string
        schema:
          $ref: '#/components/schemas/v1K8sResourceSchema'
        is_requested:
          title: Option if the config resource is requested
          type: boolean
      title: K8S resource specification
      type: object
    v1KFReplica:
      example:
        container: '{}'
        init:
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        sidecars:
        - null
        - null
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        replicas: 3
        volumes:
        - null
        - null
        connections:
        - connections
        - connections
      properties:
        replicas:
          format: int32
          title: Number of replicas
          type: integer
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/v1Volume'
          title: Optional connections section
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Distributed Replica specification
      type: object
    v1ListAgentsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - settings: '{}'
          version_api: '{}'
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          version: version
          content: content
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
        - settings: '{}'
          version_api: '{}'
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          version: version
          content: content
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          namespace: namespace
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Agent'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list agents
      type: object
    v1ListBookmarksResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - '{}'
        - '{}'
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            properties: {}
            type: object
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list of bookmarks
      type: object
    v1ListComponentHubsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          settings:
            teams:
            - teams
            - teams
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
        - owner: owner
          settings:
            teams:
            - teams
            - teams
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ComponentHub'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list component hub
      type: object
    v1ListComponentVersionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ComponentVersion'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list component hub
      type: object
    v1ListConnectionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          tags:
          - tags
          - tags
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ConnectionResponse'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list connections
      type: object
    v1ListDashboardsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec: '{}'
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec: '{}'
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Dashboard'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list dashboards
      type: object
    v1ListModelRegistriesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          settings:
            projects:
            - projects
            - projects
            teams:
            - teams
            - teams
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
        - owner: owner
          settings:
            projects:
            - projects
            - projects
            teams:
            - teams
            - teams
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ModelRegistry'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list model registries
      type: object
    v1ListModelVersionsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - run_info: '{}'
          metadata: metadata
          updated_at: 2000-01-23T04:56:07.000+00:00
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          run: run
          uuid: uuid
          tags:
          - tags
          - tags
        - run_info: '{}'
          metadata: metadata
          updated_at: 2000-01-23T04:56:07.000+00:00
          stage_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 0
          run: run
          uuid: uuid
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1ModelVersion'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list model versions
      type: object
    v1ListOrganizationMembersResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1OrganizationMember'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list organization members
      type: object
    v1ListOrganizationsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          auth: '{}'
          usage: '{}'
          name: name
          is_public: true
          created_at: 2000-01-23T04:56:07.000+00:00
          preset: preset
          user: user
          plan: '{}'
          queue: queue
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          auth: '{}'
          usage: '{}'
          name: name
          is_public: true
          created_at: 2000-01-23T04:56:07.000+00:00
          preset: preset
          user: user
          plan: '{}'
          queue: queue
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Organization'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list organizations
      type: object
    v1ListPresetsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          frozen: true
          live_state: 6
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          frozen: true
          live_state: 6
          uuid: uuid
          content: content
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Preset'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list scheduling presets
      type: object
    v1ListProjectsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - owner: owner
          settings:
            presets:
            - presets
            - presets
            teams:
            - teams
            - teams
            queues:
            - queues
            - queues
            preset: preset
            connections:
            - connections
            - connections
            queue: queue
            agents:
            - agents
            - agents
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
        - owner: owner
          settings:
            presets:
            - presets
            - presets
            teams:
            - teams
            - teams
            queues:
            - queues
            - queues
            preset: preset
            connections:
            - connections
            - connections
            queue: queue
            agents:
            - agents
            - agents
          role: role
          bookmarked: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          readme: readme
          uuid: uuid
          tags:
          - tags
          - tags
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          is_public: true
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Project'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list projects
      type: object
    v1ListQueuesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          uuid: uuid
          tags:
          - tags
          - tags
          concurrency: 6
        - agent: agent
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          uuid: uuid
          tags:
          - tags
          - tags
          concurrency: 6
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Queue'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list agents
      type: object
    v1ListRunArtifactsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - summary: '{}'
          path: path
          name: name
          connection: connection
          is_input: true
          state: state
        - summary: '{}'
          path: path
          name: name
          connection: connection
          is_input: true
          state: state
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1RunArtifact'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list run artifacts
      type: object
    v1ListRunsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - outputs: '{}'
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          inputs: '{}'
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: '{}'
          owner: owner
          settings:
            registry:
              name: name
              version: version
            agent:
              name: name
              uuid: uuid
            hub:
              name: name
              version: version
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
            queue:
              name: name
              uuid: uuid
            connections:
            - name: name
              uuid: uuid
            - name: name
              uuid: uuid
          raw_content: raw_content
          original:
            name: name
            uuid: uuid
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          live_state: 1
          readme: readme
          tags:
          - tags
          - tags
          pipeline:
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          is_managed: true
        - outputs: '{}'
          role: role
          finished_at: 2000-01-23T04:56:07.000+00:00
          inputs: '{}'
          description: description
          project: project
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
          content: content
          duration: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          meta_info: '{}'
          owner: owner
          settings:
            registry:
              name: name
              version: version
            agent:
              name: name
              uuid: uuid
            hub:
              name: name
              version: version
            namespace: namespace
            artifacts_store:
              name: name
              uuid: uuid
            queue:
              name: name
              uuid: uuid
            connections:
            - name: name
              uuid: uuid
            - name: name
              uuid: uuid
          raw_content: raw_content
          original:
            name: name
            uuid: uuid
          schedule_at: 2000-01-23T04:56:07.000+00:00
          bookmarked: true
          live_state: 1
          readme: readme
          tags:
          - tags
          - tags
          pipeline:
            name: name
            uuid: uuid
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          is_approved: true
          user: user
          status_conditions:
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          - reason: reason
            last_update_time: 2000-01-23T04:56:07.000+00:00
            last_transition_time: 2000-01-23T04:56:07.000+00:00
            message: message
            status: status
          is_managed: true
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Run'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list runs
      type: object
    v1ListSearchesResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            columns: columns
            query: query
            limit: 1
            sort: sort
            groupby: groupby
          tags:
          - tags
          - tags
        - updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          live_state: 6
          uuid: uuid
          spec:
            columns: columns
            query: query
            limit: 1
            sort: sort
            groupby: groupby
          tags:
          - tags
          - tags
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Search'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list searches
      type: object
    v1ListTeamMembersResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
          org_role: org_role
        - user_email: user_email
          role: role
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          user: user
          org_role: org_role
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1TeamMember'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list organization members
      type: object
    v1ListTeamsResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - projects:
          - projects
          - projects
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          registries:
          - registries
          - registries
          uuid: uuid
          hubs:
          - hubs
          - hubs
        - projects:
          - projects
          - projects
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          registries:
          - registries
          - registries
          uuid: uuid
          hubs:
          - hubs
          - hubs
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Team'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list teams
      type: object
    v1ListTokenResponse:
      example:
        next: next
        previous: previous
        count: 0
        results:
        - expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          key: key
        - expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          scopes:
          - scopes
          - scopes
          services:
          - services
          - services
          uuid: uuid
          key: key
      properties:
        count:
          format: int32
          title: Count of the entities
          type: integer
        results:
          items:
            $ref: '#/components/schemas/v1Token'
          title: List of all entities
          type: array
        previous:
          title: Previous page
          type: string
        next:
          title: Next page
          type: string
      title: Contains list tokens
      type: object
    v1Log:
      example:
        container: container
        node: node
        pod: pod
        value: value
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          format: date-time
          title: Optional time when the entity was created
          type: string
        node:
          title: Node name
          type: string
        pod:
          title: Pod name
          type: string
        container:
          title: Container id
          type: string
        value:
          title: Log line
          type: string
      title: Log spec definition
      type: object
    v1LogHandler:
      example:
        environment: environment
        dsn: dsn
      properties:
        dsn:
          type: string
        environment:
          type: string
      type: object
    v1Logs:
      example:
        last_time: 2000-01-23T04:56:07.000+00:00
        files:
        - files
        - files
        logs:
        - container: container
          node: node
          pod: pod
          value: value
          timestamp: 2000-01-23T04:56:07.000+00:00
        - container: container
          node: node
          pod: pod
          value: value
          timestamp: 2000-01-23T04:56:07.000+00:00
        last_file: last_file
      properties:
        logs:
          items:
            $ref: '#/components/schemas/v1Log'
          title: Log lines
          type: array
        last_time:
          format: date-time
          title: Last log time
          type: string
        last_file:
          title: Last log file
          type: string
        files:
          items:
            type: string
          title: Log files
          type: array
      title: Logs
      type: object
    v1MPIJob:
      example:
        kind: mpi_job
        slots_per_worker: 4
        worker:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        launcher:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: mpi_job
          title: Optional component kind, should be equal to 'mpi_job'
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        slots_per_worker:
          format: int32
          title: Optional slots per worker
          type: integer
        launcher:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
      title: MPI Job specification
      type: object
    v1Mapping:
      example:
        kind: mapping
        values:
        - '{}'
        - '{}'
        early_stopping:
        - '{}'
        - '{}'
        concurrency: 6
      properties:
        kind:
          default: mapping
          title: Kind of matrix, should be equal to "mapping"
          type: string
        values:
          items:
            properties: {}
            type: object
          title: The mapping values
          type: array
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stopping objects, accpets both metric and failure
            early stopping mechanisms
          type: array
      title: Matrix based on map/array either specified manually by the user or passed
        from another step
      type: object
    v1Matrix:
      example:
        random:
          seed: 1
          kind: random
          num_runs: 1
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 1
        hyperband:
          max_iterations: 4
          resume: true
          container: '{}'
          eta: 5
          seed: 9
          resource:
            name: name
          metric:
            name: name
          kind: hyperband
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 9
        mapping:
          kind: mapping
          values:
          - '{}'
          - '{}'
          early_stopping:
          - '{}'
          - '{}'
          concurrency: 6
        grid:
          seed: 7
          kind: grid
          num_runs: 6
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 1
        hyperopt:
          max_iterations: 6
          container: '{}'
          seed: 1
          kind: hyperopt
          num_runs: 3
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 2
        iterative:
          max_iterations: 6
          container: '{}'
          seed: 6
          kind: iterative
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 5
        bayes:
          max_iterations: 8
          container: '{}'
          seed: 9
          metric:
            name: name
          kind: bayes
          num_initial_runs: 6
          utility_function: '{}'
          early_stopping:
          - '{}'
          - '{}'
          params:
            key: '{}'
          concurrency: 6
      properties:
        random:
          $ref: '#/components/schemas/v1RandomSearch'
        grid:
          $ref: '#/components/schemas/v1GridSearch'
        hyperband:
          $ref: '#/components/schemas/v1Hyperband'
        bayes:
          $ref: '#/components/schemas/v1Bayes'
        hyperopt:
          $ref: '#/components/schemas/v1Hyperopt'
        iterative:
          $ref: '#/components/schemas/v1Iterative'
        mapping:
          $ref: '#/components/schemas/v1Mapping'
      title: All Schemas message
      type: object
    v1MatrixKind:
      default: random
      enum:
      - random
      - grid
      - hyperband
      - bayes
      - hyperopt
      - iterative
      - mapping
      type: string
    v1MedianStoppingPolicy:
      description: |-
        Early stopping with median stopping, this policy computes running medians across
        all runs and stops those whose best performance is worse than the median
        of the running runs.
      example:
        min_samples: 1
        kind: median
        min_interval: 6
        evaluation_interval: 0
      properties:
        kind:
          default: median
          title: Kind of this stopping policy, should be equal to "median"
          type: string
        evaluation_interval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        min_interval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        min_samples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
      type: object
    v1MetricEarlyStopping:
      description: |-
        MetricEarlyStoppingSchema specification
        Early stopping based on metric config.
      example:
        metric: metric
        kind: metric_early_stopping
        value: value
        policy: '{}'
      properties:
        kind:
          default: metric_early_stopping
          title: Kind of this metric early stopping policy, should be equal to "metric_early_stopping"
          type: string
        metric:
          description: Metric name to use for early stopping.
          type: string
        value:
          description: Metric value to use for the condition.
          type: string
        optimization:
          $ref: '#/components/schemas/v1Optimization'
        policy:
          properties: {}
          title: |-
            Policy to use, should be one of the stopping policies:
            MedianStoppingPolicy, AverageStoppingPolicy, TruncationStoppingPolicy
          type: object
      type: object
    v1ModelRegistry:
      example:
        owner: owner
        settings:
          projects:
          - projects
          - projects
          teams:
          - teams
          - teams
        role: role
        bookmarked: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 0
        readme: readme
        uuid: uuid
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_public: true
      properties:
        uuid:
          title: UUID
          type: string
        owner:
          title: Owner/namespace where the model regitry was created
          type: string
        name:
          title: 'Optional component name, should be a valid fully qualified value:
            name[:version]'
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        is_public:
          title: Optional flag to tell if this project is public
          type: boolean
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        live_state:
          format: int32
          title: Current live state
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        readme:
          title: Markdown description/readme
          type: string
        settings:
          $ref: '#/components/schemas/v1ModelRegistrySettings'
        role:
          title: Current user's role in this (org/teams)/project
          type: string
      title: Model regsitry specification
      type: object
    v1ModelRegistrySettings:
      example:
        projects:
        - projects
        - projects
        teams:
        - teams
        - teams
      properties:
        teams:
          items:
            type: string
          title: Authorized teams
          type: array
        projects:
          items:
            type: string
          title: Authorized projects
          type: array
      title: Model registry Settings specification
      type: object
    v1ModelVersion:
      example:
        run_info: '{}'
        metadata: metadata
        updated_at: 2000-01-23T04:56:07.000+00:00
        stage_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 0
        run: run
        uuid: uuid
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: 'Optional component name, should be a valid fully qualified value:
            name[:version]'
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        stage:
          $ref: '#/components/schemas/v1Stages'
        stage_conditions:
          items:
            $ref: '#/components/schemas/v1StageCondition'
          title: The status conditions timeline
          type: array
        run:
          title: Run lineage
          type: string
        run_info:
          properties: {}
          title: Extra information related to the run (lineage, project, ...)
          type: object
        metadata:
          title: Model spec metadata
          type: string
      title: Model Version specification
      type: object
    v1Notification:
      example:
        connections:
        - connections
        - connections
      properties:
        connections:
          items:
            type: string
          title: Connections to use for notification
          type: array
        trigger:
          $ref: '#/components/schemas/v1Statuses'
      title: Notification message
      type: object
    v1Operation:
      example:
        template:
          description: description
          fields:
          - fields
          - fields
          enabled: true
        plugins:
          collect_logs: true
          auth: true
          collect_resources: collect_resources
          auto_resume: true
          log_level: log_level
          shm: true
          sync_statuses: true
          collect_artifacts: true
          externalHost: true
          notifications:
          - connections:
            - connections
            - connections
          - connections:
            - connections
            - connections
          docker: true
        description: description
        hub_ref: hub_ref
        skip_on_upstream_skip: true
        matrix: '{}'
        run_patch: '{}'
        dag_ref: dag_ref
        hooks:
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          connection: connection
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        events:
        - events
        - events
        termination:
          max_retries: 4
          ttl: 8
          timeout: 7
        path_ref: path_ref
        cache:
          disable: true
          inputs:
          - inputs
          - inputs
          ttl: 0
        url_ref: url_ref
        kind: kind
        is_preset: true
        params:
          key:
            ref: ref
            search:
              offset: 3
              query: query
              limit: 3
              sort: sort
            connection: connection
            to_init: true
            context_only: true
            value: '{}'
        version: 6.519181
        tags:
        - tags
        - tags
        dependencies:
        - dependencies
        - dependencies
        schedule: '{}'
        component:
          termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          outputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          kind: kind
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          inputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          description: description
          run: '{}'
          version: 7.0483656
          tags:
          - tags
          - tags
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
        presets:
        - presets
        - presets
        name: name
        is_approved: true
        conditions:
        - conditions
        - conditions
        actions:
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        - run_patch: '{}'
          hub_ref: hub_ref
          label: label
          many: many
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
        queue: queue
      properties:
        version:
          format: float
          title: Spec version
          type: number
        kind:
          title: Optional component kind, should be equal to 'operation'
          type: string
        name:
          title: Optional component name override, should a valid slug
          type: string
        description:
          title: Optional component description override
          type: string
        tags:
          items:
            type: string
          title: Optional component tags override
          type: array
        presets:
          items:
            type: string
          title: Optional preset to use for running this operation
          type: array
        queue:
          title: Optional queue to use for running this operation
          type: string
        cache:
          $ref: '#/components/schemas/v1Cache'
        termination:
          $ref: '#/components/schemas/v1Termination'
        plugins:
          $ref: '#/components/schemas/v1Plugins'
        schedule:
          properties: {}
          title: Optional schedule section, must be a valid Schedule option (Cron/Interval/Repeatable/ExactTime)
          type: object
        events:
          items:
            type: string
          title: Optional events section, must be a valid List of Event option (Git/Alert/Webhook/Dataset)
          type: array
        actions:
          items:
            $ref: '#/components/schemas/v1Action'
          title: Optional actions section
          type: array
        hooks:
          items:
            $ref: '#/components/schemas/v1Hook'
          title: Optional hooks section
          type: array
        matrix:
          properties: {}
          title: Optional matrix section, must be a valid matrix option (Random/Grid/BO/Hyperband/Hyperopt/Mapping/Iterative)
          type: object
        dependencies:
          items:
            type: string
          title: Optional graph dependencies of this op
          type: array
        trigger:
          $ref: '#/components/schemas/v1TriggerPolicy'
        conditions:
          items:
            type: string
          title: An optional list of condition to check before starting the run, entities
            should be a valid Condition
          type: array
        skip_on_upstream_skip:
          title: Optional flag to skip this run if upstream was skipped
          type: boolean
        params:
          additionalProperties:
            $ref: '#/components/schemas/v1Param'
          title: Optional dict of params
          type: object
        run_patch:
          properties: {}
          title: |-
            Optional a run section to override  the content of the run in the template
            should be one of: Job/Service/Spark/Flink/Kubeflow/Dask/Dag
          type: object
        patch_strategy:
          $ref: '#/components/schemas/v1PatchStrategy'
        is_preset:
          title: Optional flag to mark this specification as preset
          type: boolean
        is_approved:
          title: Optional flag to mark this specification requires approval before
            running
          type: boolean
        template:
          $ref: '#/components/schemas/v1Template'
        url_ref:
          type: string
        path_ref:
          type: string
        hub_ref:
          type: string
        dag_ref:
          type: string
        component:
          $ref: '#/components/schemas/v1Component'
      title: Operation specification
      type: object
    v1OperationBody:
      properties:
        content:
          title: The Operation body content as dump string
          type: string
        is_managed:
          title: Optional, if the run is managed, true by default, this flag should
            be false if starting a non-managed run
          type: boolean
        is_approved:
          title: Optional, if the run is approved, true by default, this flag should
            be false if a run requires human validation
          type: boolean
        name:
          title: Optional, only usefule if is_managed is false
          type: string
        description:
          title: Optional, only useful if is_managed is false
          type: string
        tags:
          items:
            type: string
          title: Optional, only useful if is_managed is false
          type: array
        meta_info:
          properties: {}
          title: Meta
          type: object
      title: Operation creation
      type: object
    v1OperationCond:
      example:
        io_conidtion:
          param: param
          kind: kind
          trigger: trigger
        status_condition:
          kind: kind
          trigger: trigger
          operation: operation
      properties:
        io_conidtion:
          $ref: '#/components/schemas/v1IoCond'
        status_condition:
          $ref: '#/components/schemas/v1StatusCond'
      type: object
    v1Optimization:
      default: maximize
      description: |-
        - maximize: Minimize a metric
         - minimize: Minimize a metric
      enum:
      - maximize
      - minimize
      title: Optimization enum for metrics
      type: string
    v1OptimizationMetric:
      example:
        name: name
      properties:
        name:
          title: Name of the metric to optimize
          type: string
        optimization:
          $ref: '#/components/schemas/v1Optimization'
      title: OptimizationMetric specification
      type: object
    v1OptimizationResource:
      example:
        name: name
      properties:
        name:
          title: Name of the resource to allocate
          type: string
        type:
          $ref: '#/components/schemas/v1ResourceType'
      title: OptimizationResource specification
      type: object
    v1Organization:
      example:
        user_email: user_email
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        auth: '{}'
        usage: '{}'
        name: name
        is_public: true
        created_at: 2000-01-23T04:56:07.000+00:00
        preset: preset
        user: user
        plan: '{}'
        queue: queue
      properties:
        user:
          title: User
          type: string
        user_email:
          title: Read-only User email
          type: string
        name:
          title: Name
          type: string
        is_public:
          title: Optional flag to tell if this organization is public
          type: boolean
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        role:
          title: Current user's role in this org
          type: string
        queue:
          title: Default queue
          type: string
        preset:
          title: Default preset
          type: string
        auth:
          properties: {}
          title: Auth Settings
          type: object
        plan:
          properties: {}
          title: Plan settings
          type: object
        usage:
          properties: {}
          title: Usage info
          type: object
      title: Organization specification
      type: object
    v1OrganizationMember:
      example:
        user_email: user_email
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        user: user
      properties:
        user:
          title: User
          type: string
        user_email:
          title: Read-only User email
          type: string
        role:
          title: Role
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Organization member specification
      type: object
    v1OwnerSubEntityResourceRequestByUid:
      properties:
        owner:
          title: Owner of the namespace
          type: string
        entity:
          title: Owner of the namespace
          type: string
        uuid:
          title: Uuid identifier of the entity
          type: string
      title: Request data to get/delete sub-entity
      type: object
    v1Param:
      example:
        ref: ref
        search:
          offset: 3
          query: query
          limit: 3
          sort: sort
        connection: connection
        to_init: true
        context_only: true
        value: '{}'
      properties:
        value:
          properties: {}
          title: The value to pass, if no ref or search is passed then it corresponds
            to a literal value
          type: object
        ref:
          title: Ref corresponds to a reference of an object
          type: string
        search:
          $ref: '#/components/schemas/v1ParamSearch'
        connection:
          title: A flag to signal to Polyaxon that this param is used with a connection
          type: string
        to_init:
          title: A flag to signal to Polyaxon that this param must be tranformed to
            an init container
          type: boolean
        context_only:
          title: A flag to signal to Polyaxon that this param should not be validated
            against io
          type: boolean
      title: Param specification
      type: object
    v1ParamSearch:
      example:
        offset: 3
        query: query
        limit: 3
        sort: sort
      properties:
        query:
          title: The search query
          type: string
        sort:
          title: The search sort
          type: string
        limit:
          format: int32
          title: The search limit
          type: integer
        offset:
          format: int32
          title: The search offset
          type: integer
      title: Param search specification
      type: object
    v1PasswordChange:
      properties:
        old_password:
          title: Old password
          type: string
        new_password1:
          title: New password
          type: string
        new_password2:
          title: New password confirmation
          type: string
      title: User password change
      type: object
    v1PatchStrategy:
      default: replace
      description: |-
        - replace: Replaces the keys
         - isnull: Only set the keys if they do not exist or if they are null
         - post_merge: Merge the all keys and replace by new one
         - pre_merge: Merge the all keys and keep old ones
      enum:
      - replace
      - isnull
      - post_merge
      - pre_merge
      title: PatchStrategy
      type: string
    v1PathRef:
      example:
        path: path
        kind: path_ref
      properties:
        kind:
          default: path_ref
          title: Kind of reference, should be equal to "path_ref"
          type: string
        path:
          title: Value
          type: string
      title: Path reference specification
      type: object
    v1Pipeline:
      example:
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Optional uuid of the pipeline run
          type: string
        name:
          title: Optional name of the pipeline run
          type: string
        kind:
          $ref: '#/components/schemas/v1PipelineKind'
      type: object
    v1PipelineKind:
      default: dag
      enum:
      - dag
      - matrix
      type: string
    v1Plugins:
      example:
        collect_logs: true
        auth: true
        collect_resources: collect_resources
        auto_resume: true
        log_level: log_level
        shm: true
        sync_statuses: true
        collect_artifacts: true
        externalHost: true
        notifications:
        - connections:
          - connections
          - connections
        - connections:
          - connections
          - connections
        docker: true
      properties:
        auth:
          title: Optional flag to tell Polyaxon if it should set an auth context for
            the run, default true
          type: boolean
        docker:
          title: Optional flag to tell Polyaxon if it should set a docker socket context
            for the run, default false
          type: boolean
        shm:
          title: Optional flag to tell Polyaxon if it should set a shm context for
            the run, default false
          type: boolean
        collect_artifacts:
          title: Optional flag to tell Polyaxon to collect articats and outputs
          type: boolean
        collect_logs:
          title: Optional flag to tell Polyaxon to collect logs
          type: boolean
        collect_resources:
          title: Optional flag to tell Polyaxon to collect container resouces (cpu/memory/gpu)
          type: string
        sync_statuses:
          title: Optional flag to tell Polyaxon to sync statuses
          type: boolean
        auto_resume:
          title: Auto resume a run's artifacts (applies to resume and retries), works
            if collects_artifacts is enabled
          type: boolean
        log_level:
          title: Optional log level
          type: string
        externalHost:
          title: Optional flag to tell Polyaxon to connect to the control plan via
            the external host
          type: boolean
        notifications:
          items:
            $ref: '#/components/schemas/v1Notification'
          title: 'Option Notifications: Deprecated'
          type: array
      title: Plugins specification
      type: object
    v1PodDNSConfig:
      title: Placeholder for PodDNSConfig
      type: object
    v1PodSecurityContext:
      title: Placeholder for PodSecurityContext
      type: object
    v1PolyaxonInitContainer:
      example:
        image: image
        image_pull_policy: image_pull_policy
        resources: '{}'
        image_tag: image_tag
      properties:
        image:
          type: string
        image_tag:
          type: string
        image_pull_policy:
          type: string
        resources:
          title: Placeholder Resource Requirements
          type: object
      title: Polyaxon init specification
      type: object
    v1PolyaxonSidecarContainer:
      example:
        image: image
        sleep_interval: 0
        image_pull_policy: image_pull_policy
        resources: '{}'
        sync_interval: 7
        image_tag: image_tag
        monitor_logs: true
      properties:
        image:
          type: string
        image_tag:
          type: string
        image_pull_policy:
          type: string
        sleep_interval:
          format: int32
          type: integer
        sync_interval:
          format: int32
          type: integer
        monitor_logs:
          type: boolean
        resources:
          title: Placeholder Resource Requirements
          type: object
      title: Polyaxon sidecar specification
      type: object
    v1Preset:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        frozen: true
        live_state: 6
        uuid: uuid
        content: content
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        frozen:
          title: Optional a flag to freeze the scheduling preset
          type: boolean
        live_state:
          format: int32
          title: Current live state
          type: integer
        content:
          title: The content of the preset
          type: string
      title: Preset specification
      type: object
    v1Project:
      example:
        owner: owner
        settings:
          presets:
          - presets
          - presets
          teams:
          - teams
          - teams
          queues:
          - queues
          - queues
          preset: preset
          connections:
          - connections
          - connections
          queue: queue
          agents:
          - agents
          - agents
        role: role
        bookmarked: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        readme: readme
        uuid: uuid
        tags:
        - tags
        - tags
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        is_public: true
      properties:
        uuid:
          title: UUID
          type: string
        owner:
          title: Owner/namespace where the project was created
          type: string
        name:
          title: Required name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        is_public:
          title: Optional flag to tell if this project is public
          type: boolean
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        readme:
          title: Optional a readme text describing this entity
          type: string
        settings:
          $ref: '#/components/schemas/v1ProjectSettings'
        role:
          title: Current user's role in this (org/teams)/project
          type: string
        live_state:
          format: int32
          title: Current live state
          type: integer
      title: Project specification
      type: object
    v1ProjectSettings:
      example:
        presets:
        - presets
        - presets
        teams:
        - teams
        - teams
        queues:
        - queues
        - queues
        preset: preset
        connections:
        - connections
        - connections
        queue: queue
        agents:
        - agents
        - agents
      properties:
        connections:
          items:
            type: string
          title: Authorized connections
          type: array
        preset:
          title: Default Preset
          type: string
        presets:
          items:
            type: string
          title: Authorized Presets
          type: array
        queue:
          title: Default Queue
          type: string
        queues:
          items:
            type: string
          title: Authorized queues
          type: array
        agents:
          items:
            type: string
          title: Authorized agents
          type: array
        teams:
          items:
            type: string
          title: Authorized teams
          type: array
      title: Project Settings specification
      type: object
    v1PytorchJob:
      example:
        kind: pytorch_job
        worker:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        master:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: pytorch_job
          title: Optional component kind, should be equal to 'pytorch_job'
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        master:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
      title: Pytorch Job specification
      type: object
    v1Queue:
      example:
        agent: agent
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        priority: 0
        uuid: uuid
        tags:
        - tags
        - tags
        concurrency: 6
      properties:
        uuid:
          title: UUID
          type: string
        agent:
          title: Agent
          type: string
        name:
          title: Name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        priority:
          format: int32
          title: The queue priority
          type: integer
        concurrency:
          format: int32
          title: The queue concurrency
          type: integer
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Queue specification
      type: object
    v1RandomSearch:
      example:
        seed: 1
        kind: random
        num_runs: 1
        early_stopping:
        - '{}'
        - '{}'
        params:
          key: '{}'
        concurrency: 1
      properties:
        kind:
          default: random
          title: Kind of matrix, should be equal to "random"
          type: string
        params:
          additionalProperties:
            properties: {}
            type: object
          title: Hyperparams/Space definition of params to traverse
          type: object
        num_runs:
          format: int32
          title: Number of runs to generate and search
          type: integer
        seed:
          format: int32
          title: Seed for the random generator
          type: integer
        concurrency:
          format: int32
          title: Number of concurrent runs
          type: integer
        early_stopping:
          items:
            properties: {}
            type: object
          title: A list of Early stoppings, accpets both metric and failure early
            stopping mechanisms
          type: array
      title: Matrix based on randomly generated search space
      type: object
    v1Ray:
      example:
        kind: kind
        spec: '{}'
      properties:
        kind:
          title: Kind of runtime, should be equal to "ray"
          type: string
        spec:
          properties: {}
          title: Spark specification
          type: object
      title: Ray specification
      type: object
    v1Reference:
      example:
        path_reference:
          path: path
          kind: path_ref
        hub_reference:
          kind: hub_ref
          name: name
        dag_reference:
          kind: dag_ref
          name: name
        url_reference:
          kind: url_ref
          url: url
      properties:
        hub_reference:
          $ref: '#/components/schemas/v1HubRef'
        dag_reference:
          $ref: '#/components/schemas/v1DagRef'
        url_reference:
          $ref: '#/components/schemas/v1UrlRef'
        path_reference:
          $ref: '#/components/schemas/v1PathRef'
      title: Reference specification
      type: object
    v1ResourceRequirements:
      title: Placeholder Resource Requirements
      type: object
    v1ResourceType:
      default: int
      description: |-
        - int: Int resource
         - float: Float resource
      enum:
      - int
      - float
      title: ResourceTypes enum for optmiztion resources
      type: string
    v1Run:
      example:
        outputs: '{}'
        role: role
        finished_at: 2000-01-23T04:56:07.000+00:00
        inputs: '{}'
        description: description
        project: project
        created_at: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
        content: content
        duration: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        meta_info: '{}'
        owner: owner
        settings:
          registry:
            name: name
            version: version
          agent:
            name: name
            uuid: uuid
          hub:
            name: name
            version: version
          namespace: namespace
          artifacts_store:
            name: name
            uuid: uuid
          queue:
            name: name
            uuid: uuid
          connections:
          - name: name
            uuid: uuid
          - name: name
            uuid: uuid
        raw_content: raw_content
        original:
          name: name
          uuid: uuid
        schedule_at: 2000-01-23T04:56:07.000+00:00
        bookmarked: true
        live_state: 1
        readme: readme
        tags:
        - tags
        - tags
        pipeline:
          name: name
          uuid: uuid
        name: name
        started_at: 2000-01-23T04:56:07.000+00:00
        is_approved: true
        user: user
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        is_managed: true
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        user:
          title: Required name of user started this entity
          type: string
        owner:
          title: Required name of owner of this entity
          type: string
        project:
          title: Required project name
          type: string
        schedule_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
        started_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        finished_at:
          format: date-time
          title: Optional last time the entity was started
          type: string
        duration:
          format: int32
          title: Optional run time of the entity
          type: integer
        is_managed:
          title: Optional flag to tell if this entity is managed by the platform
          type: boolean
        is_approved:
          title: Optional flag to tell if this entity requires approval before it
            should be scheduled
          type: boolean
        content:
          title: Optional content of the entity's spec
          type: string
        raw_content:
          title: Optional content of the entity's spec
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        bookmarked:
          title: Optional if this entity was bookmarked
          type: boolean
        live_state:
          format: int32
          title: Current live state
          type: integer
        readme:
          title: Markdown description/readme
          type: string
        meta_info:
          properties: {}
          title: Optional run meta info
          type: object
        kind:
          $ref: '#/components/schemas/v1RunKind'
        runtime:
          $ref: '#/components/schemas/v1RunKind'
        inputs:
          properties: {}
          title: Optional inputs of this entity
          type: object
        outputs:
          properties: {}
          title: Optional outputs of this entity
          type: object
        original:
          $ref: '#/components/schemas/v1Cloning'
        pipeline:
          $ref: '#/components/schemas/v1Pipeline'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: The status conditions timeline
          type: array
        settings:
          $ref: '#/components/schemas/v1RunSettings'
        role:
          title: Current user's role in this (org/teams)/project/runs
          type: string
      title: Run specification
      type: object
    v1RunArtifact:
      example:
        summary: '{}'
        path: path
        name: name
        connection: connection
        is_input: true
        state: state
      properties:
        name:
          title: Artifact name
          type: string
        state:
          title: State
          type: string
        kind:
          $ref: '#/components/schemas/v1ArtifactKind'
        path:
          title: Artifact path
          type: string
        connection:
          title: Connection
          type: string
        summary:
          properties: {}
          title: Artifact schema
          type: object
        is_input:
          title: Optional flag to check the use of the artifact in a context
          type: boolean
      title: Run Artifact spec definition
      type: object
    v1RunArtifacts:
      properties:
        artifacts:
          items:
            $ref: '#/components/schemas/v1RunArtifact'
          title: Run Artifacts
          type: array
      title: Run Artifacts spec definition
      type: object
    v1RunKind:
      default: job
      enum:
      - job
      - service
      - dag
      - spark
      - dask
      - flink
      - ray
      - mpijob
      - tfjob
      - pytorchjob
      - matrix
      - schedule
      - tuner
      - watchdog
      - notifier
      - cleaner
      title: |-
        Run kind enum
        Kinds: job, service, dag, matrix, schedule
        Runtime kinds: job, service, dag, spark, dask, flink, ray, mpijob, tfjob
        helper kinds: tuner, watchdog, notifier, cleaner
      type: string
    v1RunReferenceCatalog:
      example:
        name: name
        version: version
      properties:
        name:
          title: Name
          type: string
        version:
          title: Name
          type: string
      title: Run Settings catalog specification
      type: object
    v1RunSchema:
      example:
        flink:
          kind: flink
          spec: '{}'
        pytorch_job:
          kind: pytorch_job
          worker:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          master:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        spark:
          spark_conf:
            key: spark_conf
          main_application_file: main_application_file
          kind: spark
          volumes:
          - null
          - null
          hadoop_conf:
            key: hadoop_conf
          main_class: main_class
          driver:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 4
          executor:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 4
          python_version: python_version
          spark_version: spark_version
          arguments:
          - arguments
          - arguments
          spark_config_map: spark_config_map
          hadoop_config_map: hadoop_config_map
          connections:
          - connections
          - connections
        service:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          kind: service
          volumes:
          - null
          - null
          ports:
          - 7
          - 7
          rewritePath: true
          connections:
          - connections
          - connections
        ruy:
          kind: kind
          spec: '{}'
        dag:
          components:
          - termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            outputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            kind: kind
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            inputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            description: description
            run: '{}'
            version: 7.0483656
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          - termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            outputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            kind: kind
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            inputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            description: description
            run: '{}'
            version: 7.0483656
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          operations:
          - template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            description: description
            hub_ref: hub_ref
            skip_on_upstream_skip: true
            matrix: '{}'
            run_patch: '{}'
            dag_ref: dag_ref
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            events:
            - events
            - events
            termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            path_ref: path_ref
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            url_ref: url_ref
            kind: kind
            is_preset: true
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
            version: 6.519181
            tags:
            - tags
            - tags
            dependencies:
            - dependencies
            - dependencies
            schedule: '{}'
            component:
              termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              outputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              kind: kind
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              inputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              description: description
              run: '{}'
              version: 7.0483656
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            conditions:
            - conditions
            - conditions
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          - template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            description: description
            hub_ref: hub_ref
            skip_on_upstream_skip: true
            matrix: '{}'
            run_patch: '{}'
            dag_ref: dag_ref
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            events:
            - events
            - events
            termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            path_ref: path_ref
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            url_ref: url_ref
            kind: kind
            is_preset: true
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
            version: 6.519181
            tags:
            - tags
            - tags
            dependencies:
            - dependencies
            - dependencies
            schedule: '{}'
            component:
              termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              outputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              kind: kind
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              inputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              description: description
              run: '{}'
              version: 7.0483656
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            conditions:
            - conditions
            - conditions
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          kind: dag
          volumes:
          - null
          - null
          early_stopping:
          - '{}'
          - '{}'
          connections:
          - connections
          - connections
          concurrency: 5
        dask:
          adapt_interval: adapt_interval
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          kind: dask
          volumes:
          - null
          - null
          threads: 0
          scale: 6
          adapt_max: 1
          adapt_min: 4
          connections:
          - connections
          - connections
        job:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          kind: job
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        tf_job:
          ps:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          kind: tfjob
          chief:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          worker:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          evaluator:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
        mpi_job:
          kind: mpi_job
          slots_per_worker: 4
          worker:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          launcher:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            replicas: 3
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
      properties:
        job:
          $ref: '#/components/schemas/v1Job'
        service:
          $ref: '#/components/schemas/v1Service'
        dag:
          $ref: '#/components/schemas/v1Dag'
        tf_job:
          $ref: '#/components/schemas/v1TFJob'
        pytorch_job:
          $ref: '#/components/schemas/v1PytorchJob'
        mpi_job:
          $ref: '#/components/schemas/v1MPIJob'
        dask:
          $ref: '#/components/schemas/v1Dask'
        spark:
          $ref: '#/components/schemas/v1Spark'
        flink:
          $ref: '#/components/schemas/v1Flink'
        ruy:
          $ref: '#/components/schemas/v1Ray'
      type: object
    v1RunSettings:
      example:
        registry:
          name: name
          version: version
        agent:
          name: name
          uuid: uuid
        hub:
          name: name
          version: version
        namespace: namespace
        artifacts_store:
          name: name
          uuid: uuid
        queue:
          name: name
          uuid: uuid
        connections:
        - name: name
          uuid: uuid
        - name: name
          uuid: uuid
      properties:
        namespace:
          title: Namespace
          type: string
        agent:
          $ref: '#/components/schemas/v1RunSettingsCatalog'
        queue:
          $ref: '#/components/schemas/v1RunSettingsCatalog'
        artifacts_store:
          $ref: '#/components/schemas/v1RunSettingsCatalog'
        connections:
          items:
            $ref: '#/components/schemas/v1RunSettingsCatalog'
          title: Connections
          type: array
        hub:
          $ref: '#/components/schemas/v1RunReferenceCatalog'
        registry:
          $ref: '#/components/schemas/v1RunReferenceCatalog'
      title: Run Settings specification
      type: object
    v1RunSettingsCatalog:
      example:
        name: name
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
      title: Run Settings catalog specification
      type: object
    v1S3Type:
      example:
        bucket: bucket
        key: key
      properties:
        bucket:
          title: Optional container
          type: string
        key:
          title: Optional storage_account
          type: string
      title: Wasb type specification
      type: object
    v1Schedule:
      example:
        cron:
          cron: cron
          end_at: 2000-01-23T04:56:07.000+00:00
          max_runs: 9
          depends_on_past: true
          kind: cron
          start_at: 2000-01-23T04:56:07.000+00:00
        datetime:
          kind: datetime
          start_at: 2000-01-23T04:56:07.000+00:00
        interval:
          end_at: 2000-01-23T04:56:07.000+00:00
          max_runs: 0
          depends_on_past: true
          kind: interval
          start_at: 2000-01-23T04:56:07.000+00:00
          frequency: 9
      properties:
        cron:
          $ref: '#/components/schemas/v1CronSchedule'
        datetime:
          $ref: '#/components/schemas/v1DateTimeSchedule'
        interval:
          $ref: '#/components/schemas/v1IntervalSchedule'
      title: All Schemas message
      type: object
    v1ScheduleKind:
      default: cron
      enum:
      - cron
      - interval
      - datetime
      type: string
    v1Schemas:
      example:
        connection_schema:
          git_connection:
            flags:
            - flags
            - flags
            url: url
            revision: true
          bucket_connection:
            bucket: bucket
          host_path_connection:
            host_path: host_path
            mount_path: mount_path
            read_only: true
            kind: '{}'
          claim_connection:
            volume_claim: volume_claim
            mount_path: mount_path
            read_only: true
            kind: '{}'
          host_connection:
            insecure: true
            url: url
        compiled_operation:
          termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          outputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          kind: kind
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          inputs:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          description: description
          skip_on_upstream_skip: true
          run: '{}'
          contexts:
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          - arg_format: arg_format
            is_flag: true
            name: name
            options:
            - '{}'
            - '{}'
            description: description
            is_list: true
            connection: connection
            delay_validation: true
            to_init: true
            value: '{}'
            iotype: iotype
            is_optional: true
          matrix: '{}'
          version: 7.2605214
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: '{}'
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          conditions:
          - '{}'
          - '{}'
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
          events:
          - events
          - events
        run:
          flink:
            kind: flink
            spec: '{}'
          pytorch_job:
            kind: pytorch_job
            worker:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            master:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          spark:
            spark_conf:
              key: spark_conf
            main_application_file: main_application_file
            kind: spark
            volumes:
            - null
            - null
            hadoop_conf:
              key: hadoop_conf
            main_class: main_class
            driver:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 4
            executor:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 4
            python_version: python_version
            spark_version: spark_version
            arguments:
            - arguments
            - arguments
            spark_config_map: spark_config_map
            hadoop_config_map: hadoop_config_map
            connections:
            - connections
            - connections
          service:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            kind: service
            volumes:
            - null
            - null
            ports:
            - 7
            - 7
            rewritePath: true
            connections:
            - connections
            - connections
          ruy:
            kind: kind
            spec: '{}'
          dag:
            components:
            - termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              outputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              kind: kind
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              inputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              description: description
              run: '{}'
              version: 7.0483656
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            - termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              outputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              kind: kind
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              inputs:
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              - arg_format: arg_format
                is_flag: true
                name: name
                options:
                - '{}'
                - '{}'
                description: description
                is_list: true
                connection: connection
                delay_validation: true
                to_init: true
                value: '{}'
                iotype: iotype
                is_optional: true
              description: description
              run: '{}'
              version: 7.0483656
              tags:
              - tags
              - tags
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            operations:
            - template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              description: description
              hub_ref: hub_ref
              skip_on_upstream_skip: true
              matrix: '{}'
              run_patch: '{}'
              dag_ref: dag_ref
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              events:
              - events
              - events
              termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              path_ref: path_ref
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              url_ref: url_ref
              kind: kind
              is_preset: true
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
              version: 6.519181
              tags:
              - tags
              - tags
              dependencies:
              - dependencies
              - dependencies
              schedule: '{}'
              component:
                termination:
                  max_retries: 4
                  ttl: 8
                  timeout: 7
                outputs:
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                template:
                  description: description
                  fields:
                  - fields
                  - fields
                  enabled: true
                cache:
                  disable: true
                  inputs:
                  - inputs
                  - inputs
                  ttl: 0
                kind: kind
                plugins:
                  collect_logs: true
                  auth: true
                  collect_resources: collect_resources
                  auto_resume: true
                  log_level: log_level
                  shm: true
                  sync_statuses: true
                  collect_artifacts: true
                  externalHost: true
                  notifications:
                  - connections:
                    - connections
                    - connections
                  - connections:
                    - connections
                    - connections
                  docker: true
                inputs:
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                description: description
                run: '{}'
                version: 7.0483656
                tags:
                - tags
                - tags
                presets:
                - presets
                - presets
                name: name
                is_approved: true
                actions:
                - run_patch: '{}'
                  hub_ref: hub_ref
                  label: label
                  many: many
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                - run_patch: '{}'
                  hub_ref: hub_ref
                  label: label
                  many: many
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                hooks:
                - run_patch: '{}'
                  hub_ref: hub_ref
                  connection: connection
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                - run_patch: '{}'
                  hub_ref: hub_ref
                  connection: connection
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                queue: queue
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              conditions:
              - conditions
              - conditions
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            - template:
                description: description
                fields:
                - fields
                - fields
                enabled: true
              plugins:
                collect_logs: true
                auth: true
                collect_resources: collect_resources
                auto_resume: true
                log_level: log_level
                shm: true
                sync_statuses: true
                collect_artifacts: true
                externalHost: true
                notifications:
                - connections:
                  - connections
                  - connections
                - connections:
                  - connections
                  - connections
                docker: true
              description: description
              hub_ref: hub_ref
              skip_on_upstream_skip: true
              matrix: '{}'
              run_patch: '{}'
              dag_ref: dag_ref
              hooks:
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                connection: connection
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              events:
              - events
              - events
              termination:
                max_retries: 4
                ttl: 8
                timeout: 7
              path_ref: path_ref
              cache:
                disable: true
                inputs:
                - inputs
                - inputs
                ttl: 0
              url_ref: url_ref
              kind: kind
              is_preset: true
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
              version: 6.519181
              tags:
              - tags
              - tags
              dependencies:
              - dependencies
              - dependencies
              schedule: '{}'
              component:
                termination:
                  max_retries: 4
                  ttl: 8
                  timeout: 7
                outputs:
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                template:
                  description: description
                  fields:
                  - fields
                  - fields
                  enabled: true
                cache:
                  disable: true
                  inputs:
                  - inputs
                  - inputs
                  ttl: 0
                kind: kind
                plugins:
                  collect_logs: true
                  auth: true
                  collect_resources: collect_resources
                  auto_resume: true
                  log_level: log_level
                  shm: true
                  sync_statuses: true
                  collect_artifacts: true
                  externalHost: true
                  notifications:
                  - connections:
                    - connections
                    - connections
                  - connections:
                    - connections
                    - connections
                  docker: true
                inputs:
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                - arg_format: arg_format
                  is_flag: true
                  name: name
                  options:
                  - '{}'
                  - '{}'
                  description: description
                  is_list: true
                  connection: connection
                  delay_validation: true
                  to_init: true
                  value: '{}'
                  iotype: iotype
                  is_optional: true
                description: description
                run: '{}'
                version: 7.0483656
                tags:
                - tags
                - tags
                presets:
                - presets
                - presets
                name: name
                is_approved: true
                actions:
                - run_patch: '{}'
                  hub_ref: hub_ref
                  label: label
                  many: many
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                - run_patch: '{}'
                  hub_ref: hub_ref
                  label: label
                  many: many
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                hooks:
                - run_patch: '{}'
                  hub_ref: hub_ref
                  connection: connection
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                - run_patch: '{}'
                  hub_ref: hub_ref
                  connection: connection
                  params:
                    key:
                      ref: ref
                      search:
                        offset: 3
                        query: query
                        limit: 3
                        sort: sort
                      connection: connection
                      to_init: true
                      context_only: true
                      value: '{}'
                queue: queue
              presets:
              - presets
              - presets
              name: name
              is_approved: true
              conditions:
              - conditions
              - conditions
              actions:
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              - run_patch: '{}'
                hub_ref: hub_ref
                label: label
                many: many
                params:
                  key:
                    ref: ref
                    search:
                      offset: 3
                      query: query
                      limit: 3
                      sort: sort
                    connection: connection
                    to_init: true
                    context_only: true
                    value: '{}'
              queue: queue
            kind: dag
            volumes:
            - null
            - null
            early_stopping:
            - '{}'
            - '{}'
            connections:
            - connections
            - connections
            concurrency: 5
          dask:
            adapt_interval: adapt_interval
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            kind: dask
            volumes:
            - null
            - null
            threads: 0
            scale: 6
            adapt_max: 1
            adapt_min: 4
            connections:
            - connections
            - connections
          job:
            container: '{}'
            init:
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            - container: '{}'
              path: path
              git:
                flags:
                - flags
                - flags
                url: url
                revision: true
              dockerfile:
                image: image
                path:
                  key: path
                uid: 7
                gid: 0
                filename: filename
                lang_env: lang_env
                workdir: workdir
                shell: shell
                run:
                - run
                - run
                copy:
                  key: copy
                env:
                  key: env
                workdir_path: workdir_path
              connection: connection
              artifacts:
                files:
                - files
                - files
                dirs:
                - dirs
                - dirs
                workers: 3
            sidecars:
            - null
            - null
            environment:
              service_account_name: service_account_name
              image_pull_secrets:
              - image_pull_secrets
              - image_pull_secrets
              host_aliases:
              - null
              - null
              node_name: node_name
              annotations:
                key: annotations
              priority: 3
              labels:
                key: labels
              priority_class_name: priority_class_name
              node_selector:
                key: node_selector
              host_network: true
              tolerations:
              - null
              - null
              dns_policy: dns_policy
              restart_policy: restart_policy
              dns_config: '{}'
              scheduler_name: scheduler_name
              security_context: '{}'
              affinity: '{}'
              hostPID: hostPID
            kind: job
            volumes:
            - null
            - null
            connections:
            - connections
            - connections
          tf_job:
            ps:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            kind: tfjob
            chief:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            worker:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            evaluator:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
          mpi_job:
            kind: mpi_job
            slots_per_worker: 4
            worker:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
            launcher:
              container: '{}'
              init:
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              - container: '{}'
                path: path
                git:
                  flags:
                  - flags
                  - flags
                  url: url
                  revision: true
                dockerfile:
                  image: image
                  path:
                    key: path
                  uid: 7
                  gid: 0
                  filename: filename
                  lang_env: lang_env
                  workdir: workdir
                  shell: shell
                  run:
                  - run
                  - run
                  copy:
                    key: copy
                  env:
                    key: env
                  workdir_path: workdir_path
                connection: connection
                artifacts:
                  files:
                  - files
                  - files
                  dirs:
                  - dirs
                  - dirs
                  workers: 3
              sidecars:
              - null
              - null
              environment:
                service_account_name: service_account_name
                image_pull_secrets:
                - image_pull_secrets
                - image_pull_secrets
                host_aliases:
                - null
                - null
                node_name: node_name
                annotations:
                  key: annotations
                priority: 3
                labels:
                  key: labels
                priority_class_name: priority_class_name
                node_selector:
                  key: node_selector
                host_network: true
                tolerations:
                - null
                - null
                dns_policy: dns_policy
                restart_policy: restart_policy
                dns_config: '{}'
                scheduler_name: scheduler_name
                security_context: '{}'
                affinity: '{}'
                hostPID: hostPID
              replicas: 3
              volumes:
              - null
              - null
              connections:
              - connections
              - connections
        autg:
          password: password
          user: user
        early_stopping:
          median:
            min_samples: 1
            kind: median
            min_interval: 6
            evaluation_interval: 0
          metric:
            metric: metric
            kind: metric_early_stopping
            value: value
            policy: '{}'
          failure:
            kind: failure_early_stopping
            percent: 7
          diff:
            min_samples: 7
            kind: kind
            min_interval: 2
            percent: 5.962134
            evaluation_interval: 5
          truncation:
            min_samples: 4
            kind: truncation
            min_interval: 2
            percent: 9
            evaluation_interval: 3
            include_succeeded: true
        matrix:
          random:
            seed: 1
            kind: random
            num_runs: 1
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 1
          hyperband:
            max_iterations: 4
            resume: true
            container: '{}'
            eta: 5
            seed: 9
            resource:
              name: name
            metric:
              name: name
            kind: hyperband
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 9
          mapping:
            kind: mapping
            values:
            - '{}'
            - '{}'
            early_stopping:
            - '{}'
            - '{}'
            concurrency: 6
          grid:
            seed: 7
            kind: grid
            num_runs: 6
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 1
          hyperopt:
            max_iterations: 6
            container: '{}'
            seed: 1
            kind: hyperopt
            num_runs: 3
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 2
          iterative:
            max_iterations: 6
            container: '{}'
            seed: 6
            kind: iterative
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 5
          bayes:
            max_iterations: 8
            container: '{}'
            seed: 9
            metric:
              name: name
            kind: bayes
            num_initial_runs: 6
            utility_function: '{}'
            early_stopping:
            - '{}'
            - '{}'
            params:
              key: '{}'
            concurrency: 6
        reference:
          path_reference:
            path: path
            kind: path_ref
          hub_reference:
            kind: hub_ref
            name: name
          dag_reference:
            kind: dag_ref
            name: name
          url_reference:
            kind: url_ref
            url: url
        k8s_resource:
          schema:
            mount_path: mount_path
            name: name
            default_mode: 5
            items:
            - items
            - items
          name: name
          is_requested: true
        artifacs:
          files:
          - files
          - files
          dirs:
          - dirs
          - dirs
          workers: 3
        git:
          flags:
          - flags
          - flags
          url: url
          revision: true
        event_type:
          name: name
        gcs:
          bucket: bucket
          blob: blob
        connection:
          schema: '{}'
          name: name
          description: description
          secret:
            mount_path: mount_path
            name: name
            default_mode: 5
            items:
            - items
            - items
          config_map:
            mount_path: mount_path
            name: name
            default_mode: 5
            items:
            - items
            - items
          tags: tags
        event:
          image:
            path: path
            colorspace: 3
            width: 4
            height: 8
          curve:
            annotation: annotation
            x:
            - 1.8268702
            - 1.8268702
            y:
            - 3.5026577
            - 3.5026577
          video:
            path: path
            content_type: content_type
            colorspace: 9
            width: 8
            height: 4
          histogram:
            counts:
            - 2.9409642974827896
            - 2.9409642974827896
            values:
            - 0.43431398824148815
            - 0.43431398824148815
          artifact:
            path: path
          metric: 6.0738983
          step: 4
          html: html
          model:
            path: path
            framework: framework
            spec: '{}'
          audio:
            num_channels: 8
            path: path
            length_frames: 6
            sample_rate: 1.7325933
            content_type: content_type
          text: text
          dataframe:
            path: path
            content_type: content_type
          chart:
            figure: '{}'
          timestamp: 2000-01-23T04:56:07.000+00:00
        s3:
          bucket: bucket
          key: key
        polyaxon_init_container:
          image: image
          image_pull_policy: image_pull_policy
          resources: '{}'
          image_tag: image_tag
        dockerfile:
          image: image
          path:
            key: path
          uid: 7
          gid: 0
          filename: filename
          lang_env: lang_env
          workdir: workdir
          shell: shell
          run:
          - run
          - run
          copy:
            key: copy
          env:
            key: env
          workdir_path: workdir_path
        artifacts_mount:
          paths:
          - paths
          - paths
          name: name
        uri:
          password: password
          host: true
          user: user
        wasb:
          container: container
          path: true
          storage_account: storage_account
        schedule:
          cron:
            cron: cron
            end_at: 2000-01-23T04:56:07.000+00:00
            max_runs: 9
            depends_on_past: true
            kind: cron
            start_at: 2000-01-23T04:56:07.000+00:00
          datetime:
            kind: datetime
            start_at: 2000-01-23T04:56:07.000+00:00
          interval:
            end_at: 2000-01-23T04:56:07.000+00:00
            max_runs: 0
            depends_on_past: true
            kind: interval
            start_at: 2000-01-23T04:56:07.000+00:00
            frequency: 9
        polyaxon_sidecar_container:
          image: image
          sleep_interval: 0
          image_pull_policy: image_pull_policy
          resources: '{}'
          sync_interval: 7
          image_tag: image_tag
          monitor_logs: true
        operation_cond:
          io_conidtion:
            param: param
            kind: kind
            trigger: trigger
          status_condition:
            kind: kind
            trigger: trigger
            operation: operation
        hp_params:
          normal:
            kind: normal
            value: '{}'
          lognormal:
            kind: lognormal
            value: '{}'
          pchoice:
            kind: pchoice
            value: '{}'
          range:
            kind: range
            value: '{}'
          quniform:
            kind: quniform
            value: '{}'
          qlognormal:
            kind: qlognormal
            value: '{}'
          uniform:
            kind: uniform
            value: '{}'
          geomspace:
            kind: geomspace
            value: '{}'
          loguniform:
            kind: loguniform
            value: '{}'
          qloguniform:
            kind: qloguniform
            value: '{}'
          choice:
            kind: choice
            value: '{}'
          logspace:
            kind: logspace
            value: '{}'
          linspace:
            kind: linspace
            value: '{}'
          qnormal:
            kind: qnormal
            value: '{}'
        operation:
          template:
            description: description
            fields:
            - fields
            - fields
            enabled: true
          plugins:
            collect_logs: true
            auth: true
            collect_resources: collect_resources
            auto_resume: true
            log_level: log_level
            shm: true
            sync_statuses: true
            collect_artifacts: true
            externalHost: true
            notifications:
            - connections:
              - connections
              - connections
            - connections:
              - connections
              - connections
            docker: true
          description: description
          hub_ref: hub_ref
          skip_on_upstream_skip: true
          matrix: '{}'
          run_patch: '{}'
          dag_ref: dag_ref
          hooks:
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            connection: connection
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          events:
          - events
          - events
          termination:
            max_retries: 4
            ttl: 8
            timeout: 7
          path_ref: path_ref
          cache:
            disable: true
            inputs:
            - inputs
            - inputs
            ttl: 0
          url_ref: url_ref
          kind: kind
          is_preset: true
          params:
            key:
              ref: ref
              search:
                offset: 3
                query: query
                limit: 3
                sort: sort
              connection: connection
              to_init: true
              context_only: true
              value: '{}'
          version: 6.519181
          tags:
          - tags
          - tags
          dependencies:
          - dependencies
          - dependencies
          schedule: '{}'
          component:
            termination:
              max_retries: 4
              ttl: 8
              timeout: 7
            outputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            template:
              description: description
              fields:
              - fields
              - fields
              enabled: true
            cache:
              disable: true
              inputs:
              - inputs
              - inputs
              ttl: 0
            kind: kind
            plugins:
              collect_logs: true
              auth: true
              collect_resources: collect_resources
              auto_resume: true
              log_level: log_level
              shm: true
              sync_statuses: true
              collect_artifacts: true
              externalHost: true
              notifications:
              - connections:
                - connections
                - connections
              - connections:
                - connections
                - connections
              docker: true
            inputs:
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            - arg_format: arg_format
              is_flag: true
              name: name
              options:
              - '{}'
              - '{}'
              description: description
              is_list: true
              connection: connection
              delay_validation: true
              to_init: true
              value: '{}'
              iotype: iotype
              is_optional: true
            description: description
            run: '{}'
            version: 7.0483656
            tags:
            - tags
            - tags
            presets:
            - presets
            - presets
            name: name
            is_approved: true
            actions:
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              label: label
              many: many
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            hooks:
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            - run_patch: '{}'
              hub_ref: hub_ref
              connection: connection
              params:
                key:
                  ref: ref
                  search:
                    offset: 3
                    query: query
                    limit: 3
                    sort: sort
                  connection: connection
                  to_init: true
                  context_only: true
                  value: '{}'
            queue: queue
          presets:
          - presets
          - presets
          name: name
          is_approved: true
          conditions:
          - conditions
          - conditions
          actions:
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          - run_patch: '{}'
            hub_ref: hub_ref
            label: label
            many: many
            params:
              key:
                ref: ref
                search:
                  offset: 3
                  query: query
                  limit: 3
                  sort: sort
                connection: connection
                to_init: true
                context_only: true
                value: '{}'
          queue: queue
      properties:
        operation_cond:
          $ref: '#/components/schemas/v1OperationCond'
        early_stopping:
          $ref: '#/components/schemas/v1EarlyStopping'
        matrix:
          $ref: '#/components/schemas/v1Matrix'
        run:
          $ref: '#/components/schemas/v1RunSchema'
        operation:
          $ref: '#/components/schemas/v1Operation'
        compiled_operation:
          $ref: '#/components/schemas/v1CompiledOperation'
        schedule:
          $ref: '#/components/schemas/v1Schedule'
        connection_schema:
          $ref: '#/components/schemas/v1ConnectionSchema'
        hp_params:
          $ref: '#/components/schemas/v1HpParams'
        reference:
          $ref: '#/components/schemas/v1Reference'
        artifacts_mount:
          $ref: '#/components/schemas/v1ArtifactsMount'
        polyaxon_sidecar_container:
          $ref: '#/components/schemas/v1PolyaxonSidecarContainer'
        polyaxon_init_container:
          $ref: '#/components/schemas/v1PolyaxonInitContainer'
        artifacs:
          $ref: '#/components/schemas/v1ArtifactsType'
        wasb:
          $ref: '#/components/schemas/v1WasbType'
        gcs:
          $ref: '#/components/schemas/v1GcsType'
        s3:
          $ref: '#/components/schemas/v1S3Type'
        autg:
          $ref: '#/components/schemas/v1AuthType'
        dockerfile:
          $ref: '#/components/schemas/v1DockerfileType'
        git:
          $ref: '#/components/schemas/v1GitType'
        uri:
          $ref: '#/components/schemas/v1UriType'
        k8s_resource:
          $ref: '#/components/schemas/v1K8sResourceType'
        connection:
          $ref: '#/components/schemas/v1ConnectionType'
        event_type:
          $ref: '#/components/schemas/v1EventType'
        matrix_kind:
          $ref: '#/components/schemas/v1MatrixKind'
        schedule_kind:
          $ref: '#/components/schemas/v1ScheduleKind'
        event:
          $ref: '#/components/schemas/v1Event'
      type: object
    v1Search:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        live_state: 6
        uuid: uuid
        spec:
          columns: columns
          query: query
          limit: 1
          sort: sort
          groupby: groupby
        tags:
        - tags
        - tags
      properties:
        uuid:
          title: UUID
          type: string
        name:
          title: Optional name
          type: string
        description:
          title: Optional description
          type: string
        tags:
          items:
            type: string
          title: Optional tags of this entity
          type: array
        live_state:
          format: int32
          title: Current live state
          type: integer
        spec:
          $ref: '#/components/schemas/v1SearchSpec'
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Search specification
      type: object
    v1SearchSpec:
      example:
        columns: columns
        query: query
        limit: 1
        sort: sort
        groupby: groupby
      properties:
        query:
          title: Search query
          type: string
        sort:
          title: Search sort
          type: string
        limit:
          format: int32
          title: Limit size
          type: integer
        groupby:
          title: Search group bys
          type: string
        columns:
          title: Search columns
          type: string
      title: Search spec definition
      type: object
    v1Service:
      example:
        container: '{}'
        init:
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        sidecars:
        - null
        - null
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        kind: service
        volumes:
        - null
        - null
        ports:
        - 7
        - 7
        rewritePath: true
        connections:
        - connections
        - connections
      properties:
        kind:
          default: service
          title: Optional component kind, should be equal to 'service'
          type: string
        environment:
          $ref: '#/components/schemas/v1Environment'
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections/containers section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
        ports:
          items:
            format: int32
            type: integer
          title: Optional service section
          type: array
        rewritePath:
          description: |-
            Rewrite path to remove polyaxon base url(i.e. /v1/services/namespace/owner/project/).
            Default is false, the service shoud handle a base url.
          type: boolean
      title: Service specification
      type: object
    v1Spark:
      example:
        spark_conf:
          key: spark_conf
        main_application_file: main_application_file
        kind: spark
        volumes:
        - null
        - null
        hadoop_conf:
          key: hadoop_conf
        main_class: main_class
        driver:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 4
        executor:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 4
        python_version: python_version
        spark_version: spark_version
        arguments:
        - arguments
        - arguments
        spark_config_map: spark_config_map
        hadoop_config_map: hadoop_config_map
        connections:
        - connections
        - connections
      properties:
        kind:
          default: spark
          title: Kind of runtime, should be equal to "spark"
          type: string
        connections:
          items:
            type: string
          title: Optional connections section
          type: array
        volumes:
          description: Volumes is a list of volumes that can be mounted.
          items:
            $ref: '#/components/schemas/v1Volume'
          type: array
        type:
          $ref: '#/components/schemas/v1SparkType'
        spark_version:
          description: Spark version is the version of Spark the application uses.
          type: string
        python_version:
          description: Spark version is the version of Spark the application uses.
          type: string
        deploy_mode:
          $ref: '#/components/schemas/SparkDeployMode'
        main_class:
          description: |-
            MainClass is the fully-qualified main class of the Spark application.
            This only applies to Java/Scala Spark applications.
          type: string
        main_application_file:
          description: MainFile is the path to a bundled JAR, Python, or R file of
            the application.
          type: string
        arguments:
          description: Arguments is a list of arguments to be passed to the application.
          items:
            type: string
          type: array
        hadoop_conf:
          additionalProperties:
            type: string
          description: |-
            HadoopConf carries user-specified Hadoop configuration properties as they would use the  the "--conf" option
            in spark-submit.  The SparkApplication controller automatically adds prefix "spark.hadoop." to Hadoop
            configuration properties.
          type: object
        spark_conf:
          additionalProperties:
            type: string
          description: |-
            HadoopConf carries user-specified Hadoop configuration properties as they would use the  the "--conf" option
            in spark-submit.  The SparkApplication controller automatically adds prefix "spark.hadoop." to Hadoop
            configuration properties.
          type: object
        spark_config_map:
          description: |-
            SparkConfigMap carries the name of the ConfigMap containing Spark configuration files such as log4j.properties.
            The controller will add environment variable SPARK_CONF_DIR to the path where the ConfigMap is mounted to.
          type: string
        hadoop_config_map:
          description: |-
            HadoopConfigMap carries the name of the ConfigMap containing Hadoop configuration files such as core-site.xml.
            The controller will add environment variable HADOOP_CONF_DIR to the path where the ConfigMap is mounted to.
          type: string
        executor:
          $ref: '#/components/schemas/v1SparkReplica'
        driver:
          $ref: '#/components/schemas/v1SparkReplica'
      title: Spark specification
      type: object
    v1SparkReplica:
      example:
        container: '{}'
        init:
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        - container: '{}'
          path: path
          git:
            flags:
            - flags
            - flags
            url: url
            revision: true
          dockerfile:
            image: image
            path:
              key: path
            uid: 7
            gid: 0
            filename: filename
            lang_env: lang_env
            workdir: workdir
            shell: shell
            run:
            - run
            - run
            copy:
              key: copy
            env:
              key: env
            workdir_path: workdir_path
          connection: connection
          artifacts:
            files:
            - files
            - files
            dirs:
            - dirs
            - dirs
            workers: 3
        sidecars:
        - null
        - null
        environment:
          service_account_name: service_account_name
          image_pull_secrets:
          - image_pull_secrets
          - image_pull_secrets
          host_aliases:
          - null
          - null
          node_name: node_name
          annotations:
            key: annotations
          priority: 3
          labels:
            key: labels
          priority_class_name: priority_class_name
          node_selector:
            key: node_selector
          host_network: true
          tolerations:
          - null
          - null
          dns_policy: dns_policy
          restart_policy: restart_policy
          dns_config: '{}'
          scheduler_name: scheduler_name
          security_context: '{}'
          affinity: '{}'
          hostPID: hostPID
        replicas: 4
      properties:
        replicas:
          format: int32
          title: Number of replicas
          type: integer
        environment:
          $ref: '#/components/schemas/v1Environment'
        init:
          items:
            $ref: '#/components/schemas/v1Init'
          title: Optional init connections section
          type: array
        sidecars:
          items:
            $ref: '#/components/schemas/v1Container'
          title: Optional sidecars section
          type: array
        container:
          title: Placeholder for Container
          type: object
      title: Spark replica definition
      type: object
    v1SparkType:
      default: java
      enum:
      - java
      - scala
      - python
      - r
      type: string
    v1Stage:
      example:
        stage_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        uuid: uuid
      properties:
        uuid:
          title: The uuid of the stage
          type: string
        stage:
          $ref: '#/components/schemas/v1Stages'
        stage_conditions:
          items:
            $ref: '#/components/schemas/v1StageCondition'
          title: The stage conditions timeline
          type: array
      title: Stage specification
      type: object
    v1StageCondition:
      example:
        reason: reason
        last_update_time: 2000-01-23T04:56:07.000+00:00
        last_transition_time: 2000-01-23T04:56:07.000+00:00
        message: message
        status: status
      properties:
        type:
          $ref: '#/components/schemas/v1Stages'
        status:
          title: Status state
          type: string
        reason:
          title: Status reason
          type: string
        message:
          title: Status message
          type: string
        last_update_time:
          format: date-time
          title: last update time
          type: string
        last_transition_time:
          format: date-time
          title: last transition time
          type: string
      title: stage condition specification
      type: object
    v1Stages:
      default: testing
      enum:
      - testing
      - staging
      - production
      - disabled
      type: string
    v1Status:
      example:
        uuid: uuid
        status_conditions:
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
        - reason: reason
          last_update_time: 2000-01-23T04:56:07.000+00:00
          last_transition_time: 2000-01-23T04:56:07.000+00:00
          message: message
          status: status
      properties:
        uuid:
          title: The uuid of the status
          type: string
        status:
          $ref: '#/components/schemas/v1Statuses'
        status_conditions:
          items:
            $ref: '#/components/schemas/v1StatusCondition'
          title: The status conditions timeline
          type: array
      title: Status specification
      type: object
    v1StatusCond:
      example:
        kind: kind
        trigger: trigger
        operation: operation
      properties:
        kind:
          title: Kind of condition, should be equal to "status"
          type: string
        operation:
          title: Operation to set the condition on
          type: string
        trigger:
          title: Trigger to check, must a valid status or union of statuses, e.g.
            succeeded  or succeeded | failed
          type: string
      title: Status condition specification
      type: object
    v1StatusCondition:
      example:
        reason: reason
        last_update_time: 2000-01-23T04:56:07.000+00:00
        last_transition_time: 2000-01-23T04:56:07.000+00:00
        message: message
        status: status
      properties:
        type:
          $ref: '#/components/schemas/v1Statuses'
        status:
          title: Status state
          type: string
        reason:
          title: Status reason
          type: string
        message:
          title: Status message
          type: string
        last_update_time:
          format: date-time
          title: last update time
          type: string
        last_transition_time:
          format: date-time
          title: last transition time
          type: string
      title: Status condition specification
      type: object
    v1Statuses:
      default: created
      enum:
      - created
      - resuming
      - compiled
      - queued
      - scheduled
      - starting
      - initializing
      - running
      - processing
      - stopping
      - failed
      - stopped
      - succeeded
      - skipped
      - warning
      - unschedulable
      - upstream_failed
      - retrying
      - unknown
      - done
      type: string
    v1TFJob:
      example:
        ps:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        kind: tfjob
        chief:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        worker:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
        evaluator:
          container: '{}'
          init:
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          - container: '{}'
            path: path
            git:
              flags:
              - flags
              - flags
              url: url
              revision: true
            dockerfile:
              image: image
              path:
                key: path
              uid: 7
              gid: 0
              filename: filename
              lang_env: lang_env
              workdir: workdir
              shell: shell
              run:
              - run
              - run
              copy:
                key: copy
              env:
                key: env
              workdir_path: workdir_path
            connection: connection
            artifacts:
              files:
              - files
              - files
              dirs:
              - dirs
              - dirs
              workers: 3
          sidecars:
          - null
          - null
          environment:
            service_account_name: service_account_name
            image_pull_secrets:
            - image_pull_secrets
            - image_pull_secrets
            host_aliases:
            - null
            - null
            node_name: node_name
            annotations:
              key: annotations
            priority: 3
            labels:
              key: labels
            priority_class_name: priority_class_name
            node_selector:
              key: node_selector
            host_network: true
            tolerations:
            - null
            - null
            dns_policy: dns_policy
            restart_policy: restart_policy
            dns_config: '{}'
            scheduler_name: scheduler_name
            security_context: '{}'
            affinity: '{}'
            hostPID: hostPID
          replicas: 3
          volumes:
          - null
          - null
          connections:
          - connections
          - connections
      properties:
        kind:
          default: tfjob
          title: Optional component kind, should be equal to 'pytorch_job'
          type: string
        cleanPodPolicy:
          $ref: '#/components/schemas/v1CleanPodPolicy'
        chief:
          $ref: '#/components/schemas/v1KFReplica'
        ps:
          $ref: '#/components/schemas/v1KFReplica'
        worker:
          $ref: '#/components/schemas/v1KFReplica'
        evaluator:
          $ref: '#/components/schemas/v1KFReplica'
      title: TF Job specification
      type: object
    v1Team:
      example:
        projects:
        - projects
        - projects
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        registries:
        - registries
        - registries
        uuid: uuid
        hubs:
        - hubs
        - hubs
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
        projects:
          items:
            type: string
          title: projects
          type: array
        hubs:
          items:
            type: string
          title: hubs
          type: array
        registries:
          items:
            type: string
          title: registries
          type: array
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Team specification
      type: object
    v1TeamMember:
      example:
        user_email: user_email
        role: role
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        user: user
        org_role: org_role
      properties:
        user:
          title: User
          type: string
        user_email:
          title: User email
          type: string
        role:
          title: Role
          type: string
        org_role:
          title: Organization Role
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Team member specification
      type: object
    v1Template:
      example:
        description: description
        fields:
        - fields
        - fields
        enabled: true
      properties:
        enabled:
          type: boolean
        description:
          title: Template description
          type: string
        fields:
          items:
            type: string
          title: Fields that require customization
          type: array
      title: Template specification
      type: object
    v1Termination:
      description: Termination specification, it defines how to handle failures, job
        runtime, and cleanup policy.
      example:
        max_retries: 4
        ttl: 8
        timeout: 7
      properties:
        max_retries:
          format: int32
          title: Max retries for a specific run
          type: integer
        ttl:
          format: int32
          title: A TTL definition
          type: integer
        timeout:
          format: int32
          title: A timeout in seconds
          type: integer
      type: object
    v1Token:
      example:
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        started_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        scopes:
        - scopes
        - scopes
        services:
        - services
        - services
        uuid: uuid
        key: key
      properties:
        uuid:
          title: UUID
          type: string
        key:
          title: Key
          type: string
        name:
          title: Optional token name
          type: string
        scopes:
          items:
            type: string
          title: Optional scopes allowed for this token
          type: array
        services:
          items:
            type: string
          title: Optional services allowed for this token
          type: array
        started_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        expires_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        created_at:
          format: date-time
          title: Optional time when the entity was created
          type: string
        updated_at:
          format: date-time
          title: Optional last time the entity was updated
          type: string
      title: Token specification
      type: object
    v1Toleration:
      title: Placeholder for Toleration
      type: object
    v1TriggerPolicy:
      default: all_succeeded
      enum:
      - all_succeeded
      - all_failed
      - all_done
      - one_succeeded
      - one_failed
      - one_done
      title: TriggerPolicy enum
      type: string
    v1TruncationStoppingPolicy:
      description: |-
        Early stopping with truncation stopping, this policy stops a percentage of
        all running runs at every evaluation.
      example:
        min_samples: 4
        kind: truncation
        min_interval: 2
        percent: 9
        evaluation_interval: 3
        include_succeeded: true
      properties:
        kind:
          default: truncation
          title: Kind of this stopping policy, should be equal to "truncation"
          type: string
        percent:
          description: |-
            The percentage of runs to stop, at each evaluation interval.
            e.g. 1 - 99.
          format: int32
          type: integer
        evaluation_interval:
          description: Interval/Frequency for applying the policy.
          format: int32
          type: integer
        min_interval:
          format: int32
          title: Min interval (e.g steps) before starting the process
          type: integer
        min_samples:
          format: int32
          title: Min samples runs succeeded before starting the process
          type: integer
        include_succeeded:
          title: Flag to include or not the succeeded runs in the calculation
          type: boolean
      type: object
    v1UriType:
      example:
        password: password
        host: true
        user: user
      properties:
        user:
          title: Optional user
          type: string
        password:
          title: Optional password
          type: string
        host:
          title: Optional host
          type: boolean
      title: Uri type specification
      type: object
    v1UrlRef:
      example:
        kind: url_ref
        url: url
      properties:
        kind:
          default: url_ref
          title: Kind of reference, should be equal to "url_ref"
          type: string
        url:
          title: Value
          type: string
      title: Url reference specification
      type: object
    v1User:
      example:
        organization: organization
        name: name
        theme: 0
        email: email
        username: username
      properties:
        username:
          title: Username
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        theme:
          format: int32
          title: Theme
          type: integer
        organization:
          title: Default organization
          type: string
      title: Auth specification
      type: object
    v1UserEmail:
      properties:
        email:
          title: User username
          type: string
      title: User email
      type: object
    v1UserSingup:
      properties:
        username:
          title: User username
          type: string
        email:
          title: User email
          type: string
        organization:
          title: User organization
          type: string
        password:
          title: User password
          type: string
        invitation_key:
          title: Invitation key
          type: string
      title: User singup
      type: object
    v1Uuids:
      properties:
        uuids:
          items:
            type: string
          type: array
      type: object
    v1Version:
      example:
        min: min
        latest: latest
      properties:
        min:
          title: Min version
          type: string
        latest:
          title: Latest version
          type: string
      title: Version specification
      type: object
    v1Volume:
      title: Placeholder for Volume
      type: object
    v1WasbType:
      example:
        container: container
        path: true
        storage_account: storage_account
      properties:
        container:
          title: Optional container
          type: string
        storage_account:
          title: Optional storage_account
          type: string
        path:
          title: Optional path
          type: boolean
      title: Wasb type specification
      type: object
    v1AverageStoppingPolicy:
      properties:
        kind:
          type: object
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: Authorization
      type: apiKey

