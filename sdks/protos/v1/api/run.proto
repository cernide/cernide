/**
 * Copyright 2018-2020 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "v1/api/base.proto";
import "v1/api/status.proto";
import "v1/polyflow/operation.proto";

// Run kind enum
// Kinds: job, service, dag, spark, dask, flink, ray, mpijob, tfjob, pytorchjob
// Meta kinds: job, service, dag, parallel, schedule
// helper kinds: tuner, watchdog, notifier
enum RunKind {
    job = 0;
    service = 1;
    dag = 2;
    spark = 3;
    dask = 4;
    flink = 5;
    ray = 6;
    mpijob = 7;
    tfjob = 8;
    pytorchjob = 9;
    parallel = 10;
    scheduler = 11;
    tuner = 12;
    watchdog = 13;
    notifier = 14;
}

enum CloningStrategy{
    copy = 0;
    restart = 1;
    cache = 2;
    schedule = 3;
}

// Run specification
message Run {
    // UUID
    string uuid = 1;

    // Optional name
    string name = 2;

    // Optional description
    string description = 3;

    // Optional tags of this entity
    repeated string tags = 4;

    // Optional if the entity has been deleted
    bool deleted = 5;

    // Required name of user started this entity
    string user = 6;

    // Required name of owner of this entity
    string owner = 7;

    // Required project name
    string project = 8;

    // Optional time when the entityt was created
    google.protobuf.Timestamp created_at = 9;

    // Optional last time the entity was updated
    google.protobuf.Timestamp updated_at = 10;

    // Optional last time the entity was started
    google.protobuf.Timestamp started_at = 11;

    // Optional last time the entity was started
    google.protobuf.Timestamp finished_at = 12;

    // Optional flag to tell if this entity is managed by the platform
    string is_managed = 13;

    // Optional content of the entity's spec
    string content = 14;

    // Optional latest status of this entity
    Statuses status = 15;

    // Optional if this entity was bookmarked
    bool bookmarked = 16;

    // Optional run meta info
    google.protobuf.Struct meta_info = 17;

    // Optional is helper run
    bool is_helper = 18;

    // Optional kind to tell the kind of this run
    RunKind kind = 19;

    // Optional meta kind to tell the nature of this run
    RunKind meta_kind = 20;

    // Optional hub reference versioned component
    string hub = 21;

    // Optional inputs of this entity
    google.protobuf.Struct inputs = 22;

    // Optional outputs of this entity
    google.protobuf.Struct outputs = 23;

    // Is resume
    bool is_resume = 24;

    // Is clone
    bool is_clone = 25;

    // Optional if this run was restarted/copied/resumed/cached
    CloningStrategy cloning_strategy = 26;

    // Optional uuid of the pipeline
    string pipeline = 27;

    // Optional uuid of the original run
    string original = 28;

    // Optional name of the pipeline
    string pipeline_name = 29;

    // Optional name of the original run
    string original_name = 30;

    // The status conditions timeline
    repeated StatusCondition status_conditions = 31;
}

// Operation creation
message OperationBody{
    // The Operation body content
    Operation content = 1;
    // Optional, if the run is managed, true by default, this flag should be false if starting a non-managed run
    bool is_managed = 2;
    // Optional, only usefule if is_managed is false
    string name = 3;
    // Optional, only useful if is_managed is false
    string description = 4;
    // Optional, only useful if is_managed is false
    repeated string tags = 5;
}

// Request data to create run
message RunCreateBodyRequest{
    // Owner of the namespace
    string owner = 1;

    // Project where the run will be assigned
    string project = 2;

    // operation object
    OperationBody operation = 3;
}

// Request data to get/update/delete an operation run
message RunBodyRequest{
    // Owner of the namespace
    string owner = 1;

    // Project where the run will be assigned
    string project = 2;

    // Run object
    Run run = 3;
}

// Request data to update run
message EntityRunBodyRequest{
    // Enitity Run
    ProjectEntityResourceRequest entity = 1;

    // Run object
    Run run = 2;
}

 // Contains list runs
 message ListRunsResponse{
    // Count of the entities
    int32 count = 1;

    // List of all entities
    repeated Run results = 2;

    // Previous page
    string previous = 3;

    // Next page
    string next = 4;
}


// Run Settings catalog specification
message RunSettingsCatalog {
    // Uuid
    string uuid = 1;

    // Name
    string name = 2;
}

// Run Settings specification
message RunSettings {
    // Namespace
    string namespace = 1;

    // Agent
    RunSettingsCatalog agent = 2;

    // Queue
    RunSettingsCatalog queue = 3;

    // Artifacts Store
    RunSettingsCatalog artifacts_store = 4;

    // Connections
    repeated RunSettingsCatalog connections = 5;
}
