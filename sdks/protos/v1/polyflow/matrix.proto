/**
 * Copyright 2018-2020 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/struct.proto";

// Matrix Choice specification
message HpChoice {
    // Kind of hp matrix, should be equal to "choice"
    string kind = 1;

   // Value
    google.protobuf.Struct value = 2;
}

// Matrix Probabilistic Choice specification
message HpPChoice {
    // Kind of hp matrix, should be equal to "pchoice"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Range specification
message HpRange {
    // Kind of hp matrix, should be equal to "range"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}


// Matrix Linear Space specification
message HpLinSpace {
    // Kind of hp matrix, should be equal to "linspace"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Log Space specification
message HpLogSpace {
    // Kind of hp matrix, should be equal to "logspace"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Geom Space specification
message HpGeomSpace {
    // Kind of hp matrix, should be equal to "geomspace"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Uniform Dist specification
message HpUniform {
    // Kind of hp matrix, should be equal to "uniform"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Quantized Uniform Dist specification
message HpQUniform {
    // Kind of hp matrix, should be equal to "quniform"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Log Uniform Dist specification
message HpLogUniform {
    // Kind of hp matrix, should be equal to "loguniform"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Quantized Log Uniform Dist specification
message HpQLogUniform {
    // Kind of hp matrix, should be equal to "qloguniform"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Normal Dist specification
message HpNormal {
    // Kind of hp matrix, should be equal to "normal"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Quantized Normal Dist specification
message HpQNormal {
    // Kind of hp matrix, should be equal to "qnormal"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Log Normal Dist specification
message HpLogNormal {
    // Kind of hp matrix, should be equal to "lognormal"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Matrix Quantized Log Normal Dist specification
message HpQLogNormal {
    // Kind of hp matrix, should be equal to "qlognormal"
    string kind = 1;

    // Value
    google.protobuf.Struct value = 2;
}

// Hp Matrix specification
message Matrix {
    oneof matrix {
        HpChoice choice = 1;
        HpPChoice pchoice = 2;
        HpRange range = 3;
        HpLinSpace linspace = 4;
        HpLogSpace logspace = 5;
        HpGeomSpace geomspace = 6;
        HpUniform uniform = 7;
        HpQUniform quniform = 8;
        HpLogUniform loguniform = 9;
        HpQLogUniform qloguniform = 10;
        HpNormal normal = 11;
        HpQNormal qnormal = 12;
        HpLogNormal lognormal = 13;
        HpQLogNormal qlognormal = 14;
    }
}
