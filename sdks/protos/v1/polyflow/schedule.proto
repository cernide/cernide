/**
 * Copyright 2018-2020 Polyaxon, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";

// Cron schedule specification
message CronSchedule {
    // Kind of parallel, should be equal to "cron"
    string kind = 1;

    // Whan to start this cron schedule
    google.protobuf.Timestamp start_at = 2;

    // Whan to end this cron schedule
    google.protobuf.Timestamp end_at = 3;

    // Cron definition, e.g. 0 1 * * *
    string cron = 4;

    // A flag to set a dependency on past executions
    bool depends_on_past = 5;
}


// Exact time schedule specification
message ExactTimeSchedule {
    // Kind of parallel, should be equal to "exact_time"
    string kind = 1;

    // Whan to start this cron schedule
    google.protobuf.Timestamp start_at = 2;
}


// Interval schedule specification
message IntervalSchedule {
    // Kind of parallel, should be equal to "interval"
    string kind = 1;

    // When to start this interval schedule
    google.protobuf.Timestamp start_at = 2;

    // Whan to end this interval schedule
    google.protobuf.Timestamp end_at = 3;

    // Frequency at which to execute the runs
    int32 frequency = 4;

    // A flag to set a dependency on past executions
    bool depends_on_past = 5;
}


// Repeatable schedule specification
message RepeatableSchedule {
    // Kind of parallel, should be equal to "repeatable"
    string kind = 1;

    // Limit to stop executing this schedule
    int32 limit = 2;

    // A flag to set a dependency on past executions
    bool depends_on_past = 3;
}

// All Schemas message
message Schedule {
    oneof schedule {
        CronSchedule cron = 1;
        ExactTimeSchedule exact_time = 2;
        IntervalSchedule interval = 3;
        RepeatableSchedule repeatable = 4;
    }
}
