// Copyright 2018-2020 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PolyaxonSdk);
  }
}(this, function(expect, PolyaxonSdk) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('V1ConnectionKind', function() {
      beforeEach(function() {
        instance = PolyaxonSdk.V1ConnectionKind;
      });

      it('should create an instance of V1ConnectionKind', function() {
        // TODO: update the code to test V1ConnectionKind
        expect(instance).to.be.a('object');
      });

      it('should have the property host_path', function() {
        expect(instance).to.have.property('host_path');
        expect(instance.host_path).to.be("host_path");
      });

      it('should have the property volume_claim', function() {
        expect(instance).to.have.property('volume_claim');
        expect(instance.volume_claim).to.be("volume_claim");
      });

      it('should have the property gcs', function() {
        expect(instance).to.have.property('gcs');
        expect(instance.gcs).to.be("gcs");
      });

      it('should have the property s3', function() {
        expect(instance).to.have.property('s3');
        expect(instance.s3).to.be("s3");
      });

      it('should have the property wasb', function() {
        expect(instance).to.have.property('wasb');
        expect(instance.wasb).to.be("wasb");
      });

      it('should have the property registry', function() {
        expect(instance).to.have.property('registry');
        expect(instance.registry).to.be("registry");
      });

      it('should have the property git', function() {
        expect(instance).to.have.property('git');
        expect(instance.git).to.be("git");
      });

      it('should have the property aws', function() {
        expect(instance).to.have.property('aws');
        expect(instance.aws).to.be("aws");
      });

      it('should have the property gcp', function() {
        expect(instance).to.have.property('gcp');
        expect(instance.gcp).to.be("gcp");
      });

      it('should have the property azure', function() {
        expect(instance).to.have.property('azure');
        expect(instance.azure).to.be("azure");
      });

      it('should have the property mysql', function() {
        expect(instance).to.have.property('mysql');
        expect(instance.mysql).to.be("mysql");
      });

      it('should have the property postgres', function() {
        expect(instance).to.have.property('postgres');
        expect(instance.postgres).to.be("postgres");
      });

      it('should have the property oracle', function() {
        expect(instance).to.have.property('oracle');
        expect(instance.oracle).to.be("oracle");
      });

      it('should have the property vertica', function() {
        expect(instance).to.have.property('vertica');
        expect(instance.vertica).to.be("vertica");
      });

      it('should have the property sqlite', function() {
        expect(instance).to.have.property('sqlite');
        expect(instance.sqlite).to.be("sqlite");
      });

      it('should have the property mssql', function() {
        expect(instance).to.have.property('mssql');
        expect(instance.mssql).to.be("mssql");
      });

      it('should have the property redis', function() {
        expect(instance).to.have.property('redis');
        expect(instance.redis).to.be("redis");
      });

      it('should have the property presto', function() {
        expect(instance).to.have.property('presto');
        expect(instance.presto).to.be("presto");
      });

      it('should have the property mongo', function() {
        expect(instance).to.have.property('mongo');
        expect(instance.mongo).to.be("mongo");
      });

      it('should have the property cassandra', function() {
        expect(instance).to.have.property('cassandra');
        expect(instance.cassandra).to.be("cassandra");
      });

      it('should have the property ftp', function() {
        expect(instance).to.have.property('ftp');
        expect(instance.ftp).to.be("ftp");
      });

      it('should have the property grpc', function() {
        expect(instance).to.have.property('grpc');
        expect(instance.grpc).to.be("grpc");
      });

      it('should have the property hdfs', function() {
        expect(instance).to.have.property('hdfs');
        expect(instance.hdfs).to.be("hdfs");
      });

      it('should have the property http', function() {
        expect(instance).to.have.property('http');
        expect(instance.http).to.be("http");
      });

      it('should have the property pig_cli', function() {
        expect(instance).to.have.property('pig_cli');
        expect(instance.pig_cli).to.be("pig_cli");
      });

      it('should have the property hive_cli', function() {
        expect(instance).to.have.property('hive_cli');
        expect(instance.hive_cli).to.be("hive_cli");
      });

      it('should have the property hive_metastore', function() {
        expect(instance).to.have.property('hive_metastore');
        expect(instance.hive_metastore).to.be("hive_metastore");
      });

      it('should have the property hive_server2', function() {
        expect(instance).to.have.property('hive_server2');
        expect(instance.hive_server2).to.be("hive_server2");
      });

      it('should have the property jdbc', function() {
        expect(instance).to.have.property('jdbc');
        expect(instance.jdbc).to.be("jdbc");
      });

      it('should have the property jenkins', function() {
        expect(instance).to.have.property('jenkins');
        expect(instance.jenkins).to.be("jenkins");
      });

      it('should have the property samba', function() {
        expect(instance).to.have.property('samba');
        expect(instance.samba).to.be("samba");
      });

      it('should have the property snowflake', function() {
        expect(instance).to.have.property('snowflake');
        expect(instance.snowflake).to.be("snowflake");
      });

      it('should have the property ssh', function() {
        expect(instance).to.have.property('ssh');
        expect(instance.ssh).to.be("ssh");
      });

      it('should have the property cloudant', function() {
        expect(instance).to.have.property('cloudant');
        expect(instance.cloudant).to.be("cloudant");
      });

      it('should have the property databricks', function() {
        expect(instance).to.have.property('databricks');
        expect(instance.databricks).to.be("databricks");
      });

      it('should have the property segment', function() {
        expect(instance).to.have.property('segment');
        expect(instance.segment).to.be("segment");
      });

      it('should have the property slack', function() {
        expect(instance).to.have.property('slack');
        expect(instance.slack).to.be("slack");
      });

      it('should have the property discord', function() {
        expect(instance).to.have.property('discord');
        expect(instance.discord).to.be("discord");
      });

      it('should have the property mattermost', function() {
        expect(instance).to.have.property('mattermost');
        expect(instance.mattermost).to.be("mattermost");
      });

      it('should have the property pager_duty', function() {
        expect(instance).to.have.property('pager_duty');
        expect(instance.pager_duty).to.be("pager_duty");
      });

      it('should have the property hipchat', function() {
        expect(instance).to.have.property('hipchat');
        expect(instance.hipchat).to.be("hipchat");
      });

      it('should have the property webhook', function() {
        expect(instance).to.have.property('webhook');
        expect(instance.webhook).to.be("webhook");
      });

      it('should have the property custom', function() {
        expect(instance).to.have.property('custom');
        expect(instance.custom).to.be("custom");
      });

    });
  });

}));
